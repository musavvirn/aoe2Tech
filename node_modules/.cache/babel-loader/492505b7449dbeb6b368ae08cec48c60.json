{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\zone\\\\zone\\\\src\\\\techtree\\\\panels\\\\treeParent.js\";\nimport React, { Component } from \"react\";\nimport TreePanel from \"./treePanel\";\nimport { TOWNCENTRE, RANGE, BARRACKS, STABLE, SIEGE, CASTLE, BLACSKMITH, MONASTERY, UNIVERSITY, ECONOMY, DOCK, DEFENSE } from \"./UNIT_NAMES\";\nimport CivContext from \"../CivContext\";\nimport NotifService, { CIV_SELECTED } from \"../notifService\";\nimport CivService from \"../civService\";\nvar notifService = new NotifService();\nvar civService = new CivService();\nconst NA = \"NA\";\nvar num = 1;\nexport default class TreeParent extends Component {\n  // xRange = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\n  constructor(props) {\n    num = 1;\n    super(props);\n    this.xRange = Array.from(RANGE);\n    this.state = {\n      civ: \"Aztecs\"\n    };\n    this.updateTree = this.updateTree.bind(this);\n    console.log(\"State!\");\n  }\n\n  componentDidMount() {\n    notifService.addObserver(CIV_SELECTED, this, this.updateTree);\n  }\n\n  componentWillUnmount() {\n    notifService.removeObserver(this, CIV_SELECTED);\n  }\n  /* value = civ selected */\n\n\n  updateTree(value) {\n    console.log(value);\n    this.xRange = Array.from(RANGE); // this.xRange = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\n\n    switch (value) {\n      case \"Berbers\":\n        this.disable(this.xRange, [\"Cavalry Archer\", \"Hand Cannoneer\", \"Thumb Ring\", \"Parthian Tactics\", \"Heavy Cavalry Archer\"]);\n        break;\n\n      case \"Turks\":\n        this.disable(this.xRange, [\"Arbalester\", \"Elite Skirmisher\"]);\n        break;\n    }\n  }\n\n  disable(build, units) {\n    let newTree = Array.from(build);\n    let disableLength = units.length;\n\n    for (let i = 0; disableLength > 0 && i <= 4; i++) {\n      newTree[i].forEach(unit => {\n        units.forEach(x => {\n          if (unit === x) {\n            let k = newTree[i].indexOf(unit);\n            newTree[i][k] = NA;\n            disableLength--;\n          }\n        });\n      });\n    }\n\n    console.log(newTree);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" HEADING \"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TreePanel, {\n      build: \"Archery Range\",\n      tree: this.xRange,\n      key: RANGE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["D:/Coding/GitHub/zone/zone/src/techtree/panels/treeParent.js"],"names":["React","Component","TreePanel","TOWNCENTRE","RANGE","BARRACKS","STABLE","SIEGE","CASTLE","BLACSKMITH","MONASTERY","UNIVERSITY","ECONOMY","DOCK","DEFENSE","CivContext","NotifService","CIV_SELECTED","CivService","notifService","civService","NA","num","TreeParent","constructor","props","xRange","Array","from","state","civ","updateTree","bind","console","log","componentDidMount","addObserver","componentWillUnmount","removeObserver","value","disable","build","units","newTree","disableLength","length","i","forEach","unit","x","k","indexOf","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,MAApD,EAA4DC,UAA5D,EAAwEC,SAAxE,EAAmFC,UAAnF,EAA+FC,OAA/F,EAAwGC,IAAxG,EAA8GC,OAA9G,QAA4H,cAA5H;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,IAAsBC,YAAtB,QAAyC,iBAAzC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAGA,IAAIC,YAAY,GAAG,IAAIH,YAAJ,EAAnB;AACA,IAAII,UAAU,GAAG,IAAIF,UAAJ,EAAjB;AACA,MAAMG,EAAE,GAAG,IAAX;AAEA,IAAIC,GAAG,GAAG,CAAV;AAEA,eAAe,MAAMC,UAAN,SAAyBtB,SAAzB,CAAmC;AAE9C;AAEAuB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACfH,IAAAA,GAAG,GAAG,CAAN;AACA,UAAMG,KAAN;AAFe,SAHnBC,MAGmB,GAHVC,KAAK,CAACC,IAAN,CAAWxB,KAAX,CAGU;AAGf,SAAKyB,KAAL,GAAa;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBhB,IAAAA,YAAY,CAACiB,WAAb,CAAyBnB,YAAzB,EAAuC,IAAvC,EAA6C,KAAKc,UAAlD;AACH;;AAEDM,EAAAA,oBAAoB,GAAG;AACnBlB,IAAAA,YAAY,CAACmB,cAAb,CAA4B,IAA5B,EAAkCrB,YAAlC;AACH;AAED;;;AACAc,EAAAA,UAAU,CAACQ,KAAD,EAAQ;AAEdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,SAAKb,MAAL,GAAcC,KAAK,CAACC,IAAN,CAAWxB,KAAX,CAAd,CAHc,CAId;;AAGA,YAAQmC,KAAR;AACI,WAAK,SAAL;AACI,aAAKC,OAAL,CAAa,KAAKd,MAAlB,EAA0B,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,YAArC,EAAmD,kBAAnD,EAAuE,sBAAvE,CAA1B;AACA;;AACJ,WAAK,OAAL;AACI,aAAKc,OAAL,CAAa,KAAKd,MAAlB,EAA0B,CAAC,YAAD,EAAe,kBAAf,CAA1B;AACA;AANR;AAQH;;AAEDc,EAAAA,OAAO,CAACC,KAAD,EAAQC,KAAR,EAAe;AAClB,QAAIC,OAAO,GAAGhB,KAAK,CAACC,IAAN,CAAWa,KAAX,CAAd;AACA,QAAIG,aAAa,GAAGF,KAAK,CAACG,MAA1B;;AAEA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcF,aAAa,GAAC,CAAd,IAAmBE,CAAC,IAAE,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AACxCH,MAAAA,OAAO,CAACG,CAAD,CAAP,CAAWC,OAAX,CAAmBC,IAAI,IAAI;AACvBN,QAAAA,KAAK,CAACK,OAAN,CAAcE,CAAC,IAAI;AACf,cAAID,IAAI,KAAKC,CAAb,EAAgB;AACZ,gBAAIC,CAAC,GAAGP,OAAO,CAACG,CAAD,CAAP,CAAWK,OAAX,CAAmBH,IAAnB,CAAR;AACAL,YAAAA,OAAO,CAACG,CAAD,CAAP,CAAWI,CAAX,IAAgB7B,EAAhB;AACAuB,YAAAA,aAAa;AAChB;AACJ,SAND;AAOH,OARD;AASH;;AAEDX,IAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACH;;AAEDS,EAAAA,MAAM,GAAG;AAEL,WACI,0CAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,eAAjB;AAAiC,MAAA,IAAI,EAAE,KAAK1B,MAA5C;AAAoD,MAAA,GAAG,EAAEtB,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CADJ,CAFJ,CAJA,CADJ;AAsCH;;AAlG6C","sourcesContent":["import React, {Component} from \"react\";\r\nimport TreePanel from \"./treePanel\";\r\nimport {TOWNCENTRE, RANGE, BARRACKS, STABLE, SIEGE, CASTLE, BLACSKMITH, MONASTERY, UNIVERSITY, ECONOMY, DOCK, DEFENSE} from \"./UNIT_NAMES\";\r\nimport CivContext from \"../CivContext\";\r\nimport NotifService, {CIV_SELECTED} from \"../notifService\";\r\nimport CivService from \"../civService\";\r\n\r\n\r\nvar notifService = new NotifService();\r\nvar civService = new CivService();\r\nconst NA = \"NA\";\r\n\r\nvar num = 1;\r\n\r\nexport default class TreeParent extends Component {\r\n    xRange = Array.from(RANGE);\r\n    // xRange = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\r\n    \r\n    constructor(props) {\r\n        num = 1;\r\n        super(props);\r\n        this.state = {civ: \"Aztecs\"};\r\n        this.updateTree = this.updateTree.bind(this);\r\n        console.log(\"State!\");\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        notifService.addObserver(CIV_SELECTED, this, this.updateTree);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        notifService.removeObserver(this, CIV_SELECTED);\r\n    }\r\n\r\n    /* value = civ selected */\r\n    updateTree(value) {\r\n\r\n        console.log(value)\r\n        this.xRange = Array.from(RANGE);\r\n        // this.xRange = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\r\n\r\n\r\n        switch (value) {\r\n            case \"Berbers\":\r\n                this.disable(this.xRange, [\"Cavalry Archer\", \"Hand Cannoneer\", \"Thumb Ring\", \"Parthian Tactics\", \"Heavy Cavalry Archer\"]);\r\n                break;\r\n            case \"Turks\":\r\n                this.disable(this.xRange, [\"Arbalester\", \"Elite Skirmisher\"]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    disable(build, units) {\r\n        let newTree = Array.from(build);\r\n        let disableLength = units.length;\r\n\r\n        for (let i=0; disableLength>0 && i<=4; i++) {\r\n            newTree[i].forEach(unit => {\r\n                units.forEach(x => {\r\n                    if (unit === x) {\r\n                        let k = newTree[i].indexOf(unit);\r\n                        newTree[i][k] = NA;\r\n                        disableLength--;\r\n                    } \r\n                });\r\n            });\r\n        }        \r\n\r\n        console.log(newTree);\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <>\r\n            {/* <CivContext.Consumer> \r\n                {value => this.updateTree(value)}\r\n            </CivContext.Consumer>  */}\r\n            <div>\r\n                <h5> HEADING </h5>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                        <TreePanel build=\"Archery Range\" tree={this.xRange} key={RANGE}/></tr>\r\n                        {/* <TreePanel build=\"Barracks\" tree={barracks}/>\r\n                        <TreePanel build=\"Stable\" tree={stable}/>\r\n                        \r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Siege Workshop\" tree={siege}/>\r\n                        <TreePanel build=\"Castle\" tree={castle}/>\r\n                        <TreePanel build=\"Defense\" tree={defense}/>\r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Blacksmith\" tree={blacksmith}/>\r\n                        <TreePanel build=\"University\" tree={university}/>\r\n                        <TreePanel build=\"Monastery\" tree={monastery}/>\r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Town Center\" tree={townCentre}/>\r\n                        <TreePanel build=\"Economic Buildings\" tree={economy}/>\r\n                        <TreePanel build=\"Dock\" tree={dock}/>\r\n                        </tr> */}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n                    \r\n            \r\n        )\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}