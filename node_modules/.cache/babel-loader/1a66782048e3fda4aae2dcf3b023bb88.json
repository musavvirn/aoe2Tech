{"ast":null,"code":"var players = [{\n  \"name\": \"Ghazna\",\n  \"elo\": 1568,\n  \"id\": 1000,\n  \"active\": true,\n  \"type\": 1\n}, {\n  \"name\": \"Inc\",\n  \"elo\": 2020,\n  \"id\": 1001,\n  \"active\": true,\n  \"type\": 1\n}, {\n  \"name\": \"Nano\",\n  \"elo\": 1492,\n  \"id\": 1002,\n  \"active\": true,\n  \"type\": 1\n}, {\n  \"name\": \"Andorin\",\n  \"elo\": 2042,\n  \"id\": 1003,\n  \"active\": false,\n  \"type\": 1\n}, {\n  \"name\": \"Trirem\",\n  \"elo\": 1346,\n  \"id\": 1004,\n  \"active\": true,\n  \"type\": 2\n}, {\n  \"name\": \"Pete\",\n  \"elo\": 1723,\n  \"id\": 1005,\n  \"active\": false,\n  \"type\": 1\n}, {\n  \"name\": \"T90\",\n  \"elo\": 1309,\n  \"id\": 1006,\n  \"active\": true,\n  \"type\": 2\n}, {\n  \"name\": \"Erks\",\n  \"elo\": 2011,\n  \"id\": 1007,\n  \"active\": true,\n  \"type\": 1\n}, {\n  \"name\": \"Jaguar\",\n  \"elo\": 1560,\n  \"id\": 1008,\n  \"active\": false,\n  \"type\": 1\n}, {\n  \"name\": \"Rub\",\n  \"elo\": 1564,\n  \"id\": 1009,\n  \"active\": false,\n  \"type\": 2\n}, {\n  \"name\": \"Jupee\",\n  \"elo\": 1922,\n  \"id\": 1010,\n  \"active\": true,\n  \"type\": 1\n}];\n\nclass Match {\n  //type is 1-4: 1v1, 2v2, 3v3, 4v4\n  constructor(type) {\n    this.matchID = \"XXXXXX\";\n    this.matchType = 0;\n    this.matchStatus = false;\n    this.team1 = [];\n    this.team2 = [];\n    this.matchType = type; // this.setTeams = this.setTeams.bind(this);\n    // this.getMatchType = this.getMatchType.bind(this);\n    // this.getMatchID = this.getMatchID.bind(this);\n  }\n\n  getMatchID() {\n    return this.matchID;\n  }\n\n  getMatchType() {\n    return this.matchType;\n  }\n\n  setTeams() {\n    if (!this.matchStatus && this.matchType == 1) {\n      let player = players[0];\n      let eloMin = player.elo - 50;\n      let eloMax = player.elo + 50;\n      let newList = players.splice(players.indexOf(player), 1);\n      let isMatched = false;\n      let opponent = null;\n\n      for (let i = 0; !isMatched && i < newList.length; i++) {\n        console.log(newList[i].elo);\n\n        if (newList[i].elo >= eloMin && newList[i] <= eloMax) {\n          opponent = newList[i];\n          isMatched = true;\n          this.matchStatus = true;\n        }\n      }\n\n      isMatched ? console.log(\"Match foudn!\") : console.log(\"No matches :S\");\n      return opponent;\n    }\n  }\n\n}\n\nexport default Match;","map":{"version":3,"sources":["D:/Coding/GitHub/zone/zone/src/match/match.js"],"names":["players","Match","constructor","type","matchID","matchType","matchStatus","team1","team2","getMatchID","getMatchType","setTeams","player","eloMin","elo","eloMax","newList","splice","indexOf","isMatched","opponent","i","length","console","log"],"mappings":"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","sourcesContent":["var players = [\r\n    {\"name\": \"Ghazna\", \"elo\": 1568, \"id\": 1000, \"active\": true, \"type\": 1},\r\n    {\"name\": \"Inc\", \"elo\": 2020, \"id\": 1001, \"active\": true, \"type\": 1},\r\n    {\"name\": \"Nano\", \"elo\": 1492, \"id\": 1002, \"active\": true, \"type\": 1},\r\n    {\"name\": \"Andorin\", \"elo\": 2042, \"id\": 1003, \"active\": false, \"type\": 1},\r\n    {\"name\": \"Trirem\", \"elo\": 1346, \"id\": 1004, \"active\": true, \"type\": 2},\r\n    {\"name\": \"Pete\", \"elo\": 1723, \"id\": 1005, \"active\": false, \"type\": 1},\r\n    {\"name\": \"T90\", \"elo\": 1309, \"id\": 1006, \"active\": true, \"type\": 2},\r\n    {\"name\": \"Erks\", \"elo\": 2011, \"id\": 1007, \"active\": true, \"type\": 1},\r\n    {\"name\": \"Jaguar\", \"elo\": 1560, \"id\": 1008, \"active\": false, \"type\": 1},\r\n    {\"name\": \"Rub\", \"elo\": 1564, \"id\": 1009, \"active\": false, \"type\": 2},\r\n    {\"name\": \"Jupee\", \"elo\": 1922, \"id\": 1010, \"active\": true, \"type\": 1}];\r\n\r\n\r\nclass Match {\r\n        matchID = \"XXXXXX\";\r\n        matchType = 0;\r\n        matchStatus = false;\r\n        team1 = [];\r\n        team2 = [];\r\n    //type is 1-4: 1v1, 2v2, 3v3, 4v4\r\n    constructor(type) {\r\n        this.matchType = type;\r\n        // this.setTeams = this.setTeams.bind(this);\r\n        // this.getMatchType = this.getMatchType.bind(this);\r\n        // this.getMatchID = this.getMatchID.bind(this);\r\n    }\r\n\r\n    getMatchID() {\r\n        return this.matchID;\r\n    }\r\n\r\n    getMatchType() {\r\n        return this.matchType;\r\n    }\r\n\r\n    setTeams() {\r\n        if (!this.matchStatus && this.matchType == 1) {\r\n            let player = players[0];\r\n            let eloMin = player.elo - 50;\r\n            let eloMax = player.elo + 50;\r\n            let newList = players.splice(players.indexOf(player), 1);\r\n            let isMatched = false;\r\n            let opponent = null;\r\n\r\n            for (let i=0; !isMatched && i<newList.length; i++) {\r\n                console.log(newList[i].elo);\r\n                if (newList[i].elo >= eloMin && newList[i] <= eloMax) {\r\n                    opponent = newList[i];\r\n                    isMatched = true;\r\n                    this.matchStatus = true;\r\n                    \r\n                }\r\n            }\r\n            (isMatched) ? console.log(\"Match foudn!\") : console.log(\"No matches :S\");\r\n            return opponent;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Match;\r\n    "]},"metadata":{},"sourceType":"module"}