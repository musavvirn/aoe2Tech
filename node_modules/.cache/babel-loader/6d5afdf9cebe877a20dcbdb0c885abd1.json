{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\zone\\\\zone\\\\src\\\\techtree\\\\panels\\\\tree.js\";\nimport React, { Component } from \"react\";\nimport UnitService from \"../Service/unitService\";\nimport NotifService, { UNIT_HOVERED } from \"../Service/notifService\";\nimport ReactTooltip from 'react-tooltip';\nimport Tooltip from \"rc-tooltip\";\nimport 'rc-tooltip/assets/bootstrap.css';\nimport DATA from \"../data\";\nconst NA = \"NA\";\nvar notifService = new NotifService();\nvar untiService = new UnitService();\nconst text = React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Tooltip Text\");\nlet dark = [\"NA\"];\nlet feudal = [\"Archer\", \"Skirmisher\"];\nlet castle = [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", \"NA\", \"NA\", \"Thumb Ring\"];\nlet imperial = [\"Arbalester\", \"NA\", \"Heavy Cavalry Archer\", \"Hand Cannoneer\", \"NA\", \"Parthian Tactics\"];\nlet postImp = [\"NA\"];\nlet x = [];\nx.push(dark, feudal, castle, imperial, postImp);\nconst UNITS = \"units\";\nconst TECHS = \"techs\";\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unit: \"\",\n      unitType: \"\",\n      unitInfo: \"\",\n      unitStats: {},\n      unitTechs: \"\"\n    };\n    this.defaultTree = this.defaultTree.bind(this);\n    this.generateUnit = this.generateUnit.bind(this);\n    this.handleUnitHover = this.handleUnitHover.bind(this);\n  }\n\n  componentDidMount() {\n    notifService.addObserver(UNIT_HOVERED, this, this.reset);\n  }\n\n  componentWillUnmount() {\n    notifService.removeObserver(this, UNIT_HOVERED);\n  }\n\n  reset() {// this.setState({civ : \"Aztecs\"});\n  }\n\n  defaultTree() {\n    // let dark = [\"Archer\", \"Skirmisher\"];\n    // let feudal = [\"Archer\", \"Skirmisher\"];\n    // let castle = [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", \"NA\", \"NA\", \"Thumb Ring\"];\n    // let imperial = [\"Arbalester\", \"NA\", \"Heavy Cavalry Archer\", \"Hand Cannoneer\", \"NA\", \"Parthian Tactics\"];\n    // let postImp = [\"Archer\", \"Skirmisher\"];\n    // var archer = [2, \"Archer\", \"Crossbowman\"Heavy Cavalry Archer, \"Arbalester\"];\n    // var skirm = [2, \"Skirmisher\", \"Elite Skirmisher\"];\n    // var ca = [3, \"Cavalry Archer\", \"Heavy Cavalry Archer\"];\n    // var hc = [4, \"Hand Cannoneer\"];\n    // this.units.archer = archer;\n    // this.units.skirm = skirm;\n    // this.units.ca = ca;\n    // this.units.hc = hc;\n    // this.units.push(archer, skirm, ca, hc);\n    let x = [];\n    x.push(dark, feudal, castle, imperial, postImp);\n    this.setState({\n      units: x\n    });\n    console.log(this.state.units);\n  }\n\n  generateUnit(i) {\n    if (this.props.units !== undefined) {\n      return this.props.units[i].map(u => {\n        let uImg = u.toLowerCase().replace(' ', '_').replace(' ', '_');\n        let classTag = this.determineUnitClassName(this.props.fu, u);\n        let img = React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n          overlayClassName: \"u-tooltip\",\n          align: {\n            offset: [\"0 px\", \"-15 px\"]\n          },\n          mouseLeaveDelay: \"0.0\",\n          destroyTooltipOnHide: true,\n          placement: \"top\",\n          overlay: this.tooltipContent(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: classTag,\n          name: u,\n          src: require(\"../Units/\" + uImg + \".png\"),\n          onMouseEnter: this.handleUnitHover,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        })));\n        return img;\n      });\n    }\n  }\n\n  tooltipContent() {\n    try {\n      let content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n\n      if (this.state.unitType === UNITS) {\n        content = React.createElement(React.Fragment, null, \"    \", React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, this.state.unit), \"HP: \" + this.state.unitStats.HP + \"    \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }), \"Attack: \" + this.state.unitStats.Attack, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), \"Armor: \" + this.state.unitStats.Armor, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), \"Range: \" + this.state.unitStats.Range, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), \"Cost: \" + JSON.stringify(this.state.unitStats.Cost), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, this.state.unitInfo));\n      } else if (this.state.unitType === TECHS) {\n        content = React.createElement(React.Fragment, null, \"    \", React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, this.state.unit), \"Cost: \" + JSON.stringify(this.state.unitStats.Cost), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, this.state.unitInfo));\n      }\n\n      return content;\n    } catch (e) {\n      console.log(\"tooltipContent!\");\n    }\n  }\n  /* determine & return className of img icon based on regular, fully upgraded, or NA */\n\n\n  determineUnitClassName(fu, u) {\n    let classTag;\n\n    if (fu !== undefined && this.props.fu.includes(u)) {\n      classTag = \"unit unit-fu\";\n    } else if (u !== NA) {\n      classTag = \"unit\";\n    } else {\n      classTag = \"unit unit-na\";\n    }\n\n    return classTag;\n  }\n\n  handleUnitHover(event) {\n    let obj = {\n      name: event.target.name,\n      x: event.clientX,\n      y: event.clientY\n    };\n    let name = event.target.name;\n    let type = UNITS;\n\n    if (name !== undefined && name !== NA) {\n      let unit_id = DATA.name_key.units[name];\n      type = UNITS;\n\n      if (unit_id === undefined) {\n        unit_id = DATA.name_key.techs[name];\n        type = TECHS;\n      }\n\n      let unit_info = DATA.key_value[unit_id];\n      let unit_stats = this.extractStats(name, type);\n      this.setState({\n        unit: event.target.name,\n        unitType: type,\n        unitInfo: unit_info,\n        unitStats: unit_stats\n      });\n    } else {\n      console.log(\"NA Hovered!\");\n      type = NA;\n      this.setState({\n        unit: null,\n        unitType: null,\n        unitInfo: null,\n        unitStats: null\n      });\n    }\n\n    untiService.unitHovered(obj);\n  }\n\n  extractStats(name, type) {\n    try {\n      if (type === UNITS) {\n        var unit_name = DATA.meta.units[name];\n        var unit_stats = {\n          HP: unit_name.HP,\n          Attack: unit_name.Attack,\n          Armor: unit_name.MeleeArmor + \"/\" + unit_name.PierceArmor,\n          Range: unit_name.Range,\n          Cost: unit_name.Cost\n        };\n      } else if (type === TECHS) {\n        unit_name = DATA.meta.techs[name];\n        unit_stats = {\n          Cost: unit_name.Cost\n        };\n      } else {\n        unit_stats = null;\n        console.log(\"Neither tech or unit stats\");\n      }\n\n      console.log(unit_stats);\n      return unit_stats;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/dark_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), this.generateUnit(0)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/feudal_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.generateUnit(1)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/castle_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), this.generateUnit(2)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/imperial_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), this.generateUnit(3)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/imperial_age.png\"),\n      className: \"age age-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), this.generateUnit(4)));\n  }\n\n}\n\nexport default Tree;","map":{"version":3,"sources":["D:/Coding/GitHub/zone/zone/src/techtree/panels/tree.js"],"names":["React","Component","UnitService","NotifService","UNIT_HOVERED","ReactTooltip","Tooltip","DATA","NA","notifService","untiService","text","dark","feudal","castle","imperial","postImp","x","push","UNITS","TECHS","Tree","constructor","props","state","unit","unitType","unitInfo","unitStats","unitTechs","defaultTree","bind","generateUnit","handleUnitHover","componentDidMount","addObserver","reset","componentWillUnmount","removeObserver","setState","units","console","log","i","undefined","map","u","uImg","toLowerCase","replace","classTag","determineUnitClassName","fu","img","offset","tooltipContent","require","content","HP","Attack","Armor","Range","JSON","stringify","Cost","e","includes","event","obj","name","target","clientX","y","clientY","type","unit_id","name_key","techs","unit_info","key_value","unit_stats","extractStats","unitHovered","unit_name","meta","MeleeArmor","PierceArmor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,YAAP,IAAuBC,YAAvB,QAA2C,yBAA3C;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,iCAAP;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,MAAMC,EAAE,GAAG,IAAX;AAEA,IAAIC,YAAY,GAAG,IAAIN,YAAJ,EAAnB;AACA,IAAIO,WAAW,GAAG,IAAIR,WAAJ,EAAlB;AACA,MAAMS,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAb;AACA,IAAIC,IAAI,GAAG,CAAC,IAAD,CAAX;AACA,IAAIC,MAAM,GAAG,CAAC,QAAD,EAAW,YAAX,CAAb;AACA,IAAIC,MAAM,GAAG,CAAC,aAAD,EAAgB,kBAAhB,EAAoC,gBAApC,EAAsD,IAAtD,EAA4D,IAA5D,EAAkE,YAAlE,CAAb;AACA,IAAIC,QAAQ,GAAG,CAAC,YAAD,EAAe,IAAf,EAAqB,sBAArB,EAA6C,gBAA7C,EAA+D,IAA/D,EAAqE,kBAArE,CAAf;AACA,IAAIC,OAAO,GAAG,CAAC,IAAD,CAAd;AACA,IAAIC,CAAC,GAAG,EAAR;AACAA,CAAC,CAACC,IAAF,CAAON,IAAP,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,OAAvC;AAEA,MAAMG,KAAK,GAAG,OAAd;AACA,MAAMC,KAAK,GAAG,OAAd;;AACA,MAAMC,IAAN,SAAmBpB,SAAnB,CAA6B;AACzBqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,QAAQ,EAAE,EAArB;AAAyBC,MAAAA,QAAQ,EAAE,EAAnC;AAAuCC,MAAAA,SAAS,EAAE,EAAlD;AAAsDC,MAAAA,SAAS,EAAE;AAAjE,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChBzB,IAAAA,YAAY,CAAC0B,WAAb,CAAyB/B,YAAzB,EAAuC,IAAvC,EAA6C,KAAKgC,KAAlD;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB5B,IAAAA,YAAY,CAAC6B,cAAb,CAA4B,IAA5B,EAAkClC,YAAlC;AACH;;AAEDgC,EAAAA,KAAK,GAAG,CACJ;AACH;;AAEDN,EAAAA,WAAW,GAAG;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,QAAIb,CAAC,GAAG,EAAR;AACAA,IAAAA,CAAC,CAACC,IAAF,CAAON,IAAP,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,OAAvC;AACA,SAAKuB,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAGvB;AAAT,KAAd;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWgB,KAAvB;AACH;;AAEDR,EAAAA,YAAY,CAACW,CAAD,EAAI;AACZ,QAAI,KAAKpB,KAAL,CAAWiB,KAAX,KAAqBI,SAAzB,EAAoC;AAChC,aAAO,KAAKrB,KAAL,CAAWiB,KAAX,CAAiBG,CAAjB,EAAoBE,GAApB,CAAwBC,CAAC,IAAI;AAChC,YAAIC,IAAI,GAAGD,CAAC,CAACE,WAAF,GAAgBC,OAAhB,CAAwB,GAAxB,EAA6B,GAA7B,EAAkCA,OAAlC,CAA0C,GAA1C,EAA+C,GAA/C,CAAX;AACA,YAAIC,QAAQ,GAAG,KAAKC,sBAAL,CAA4B,KAAK5B,KAAL,CAAW6B,EAAvC,EAA2CN,CAA3C,CAAf;AACI,YAAIO,GAAG,GAAG,0CAEF,oBAAC,OAAD;AACI,UAAA,gBAAgB,EAAC,WADrB;AAEI,UAAA,KAAK,EAAE;AACHC,YAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,QAAT;AADL,WAFX;AAKI,UAAA,eAAe,EAAC,KALpB;AAMI,UAAA,oBAAoB,EAAE,IAN1B;AAOI,UAAA,SAAS,EAAC,KAPd;AAQI,UAAA,OAAO,EAAE,KAAKC,cAAL,EARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAUI;AACI,UAAA,SAAS,EAAEL,QADf;AACyB,UAAA,IAAI,EAAEJ,CAD/B;AAEI,UAAA,GAAG,EAAEU,OAAO,CAAC,cAAcT,IAAd,GAAqB,MAAtB,CAFhB;AAGI,UAAA,YAAY,EAAE,KAAKd,eAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ,CAFE,CAAV;AA0BJ,eAAQoB,GAAR;AACH,OA9BM,CAAP;AA+BH;AAEJ;;AAEDE,EAAAA,cAAc,GAAG;AACb,QAAI;AACA,UAAIE,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;;AACA,UAAI,KAAKjC,KAAL,CAAWE,QAAX,KAAwBP,KAA5B,EAAmC;AAC/BsC,QAAAA,OAAO,GAAG,kDAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKjC,KAAL,CAAWC,IAAhB,CAAN,EACO,SAAS,KAAKD,KAAL,CAAWI,SAAX,CAAqB8B,EAA9B,GAAmC,MAD1C,EACiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADjD,EAEO,aAAa,KAAKlC,KAAL,CAAWI,SAAX,CAAqB+B,MAFzC,EAEgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFhD,EAGO,YAAY,KAAKnC,KAAL,CAAWI,SAAX,CAAqBgC,KAHxC,EAG8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAH9C,EAIO,YAAY,KAAKpC,KAAL,CAAWI,SAAX,CAAqBiC,KAJxC,EAI8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJ9C,EAKO,WAAWC,IAAI,CAACC,SAAL,CAAe,KAAKvC,KAAL,CAAWI,SAAX,CAAqBoC,IAApC,CALlB,EAK4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAL5D,EAMM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKxC,KAAL,CAAWG,QAAf,CANN,CAAV;AAQH,OATD,MASO,IAAI,KAAKH,KAAL,CAAWE,QAAX,KAAwBN,KAA5B,EAAmC;AACtCqC,QAAAA,OAAO,GAAG,kDAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKjC,KAAL,CAAWC,IAAhB,CAAN,EACO,WAAWqC,IAAI,CAACC,SAAL,CAAe,KAAKvC,KAAL,CAAWI,SAAX,CAAqBoC,IAApC,CADlB,EAC4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD5D,EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKxC,KAAL,CAAWG,QAAf,CAFN,CAAV;AAIH;;AACD,aAAQ8B,OAAR;AACH,KAlBD,CAkBE,OAAOQ,CAAP,EAAU;AACRxB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AAEJ;AAED;;;AACAS,EAAAA,sBAAsB,CAACC,EAAD,EAAKN,CAAL,EAAQ;AAC1B,QAAII,QAAJ;;AACA,QAAIE,EAAE,KAAKR,SAAP,IAAoB,KAAKrB,KAAL,CAAW6B,EAAX,CAAcc,QAAd,CAAuBpB,CAAvB,CAAxB,EAAmD;AAC/CI,MAAAA,QAAQ,GAAG,cAAX;AACH,KAFD,MAEO,IAAIJ,CAAC,KAAKtC,EAAV,EAAc;AACjB0C,MAAAA,QAAQ,GAAG,MAAX;AACH,KAFM,MAEA;AACHA,MAAAA,QAAQ,GAAG,cAAX;AACH;;AACD,WAAOA,QAAP;AACH;;AAEDjB,EAAAA,eAAe,CAACkC,KAAD,EAAQ;AACnB,QAAIC,GAAG,GAAG;AAACC,MAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaD,IAApB;AAA0BpD,MAAAA,CAAC,EAAEkD,KAAK,CAACI,OAAnC;AAA4CC,MAAAA,CAAC,EAAEL,KAAK,CAACM;AAArD,KAAV;AACA,QAAIJ,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaD,IAAxB;AACA,QAAIK,IAAI,GAAGvD,KAAX;;AACA,QAAIkD,IAAI,KAAKzB,SAAT,IAAsByB,IAAI,KAAK7D,EAAnC,EAAuC;AACnC,UAAImE,OAAO,GAAGpE,IAAI,CAACqE,QAAL,CAAcpC,KAAd,CAAoB6B,IAApB,CAAd;AACAK,MAAAA,IAAI,GAAGvD,KAAP;;AACA,UAAIwD,OAAO,KAAK/B,SAAhB,EAA2B;AACvB+B,QAAAA,OAAO,GAAGpE,IAAI,CAACqE,QAAL,CAAcC,KAAd,CAAoBR,IAApB,CAAV;AACAK,QAAAA,IAAI,GAAGtD,KAAP;AACH;;AAED,UAAI0D,SAAS,GAAGvE,IAAI,CAACwE,SAAL,CAAeJ,OAAf,CAAhB;AACA,UAAIK,UAAU,GAAG,KAAKC,YAAL,CAAkBZ,IAAlB,EAAwBK,IAAxB,CAAjB;AACA,WAAKnC,QAAL,CAAc;AAACd,QAAAA,IAAI,EAAG0C,KAAK,CAACG,MAAN,CAAaD,IAArB;AAA2B3C,QAAAA,QAAQ,EAAEgD,IAArC;AAA2C/C,QAAAA,QAAQ,EAAGmD,SAAtD;AAAiElD,QAAAA,SAAS,EAAGoD;AAA7E,OAAd;AAEH,KAZD,MAYO;AACHvC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAgC,MAAAA,IAAI,GAAGlE,EAAP;AACA,WAAK+B,QAAL,CAAc;AAACd,QAAAA,IAAI,EAAG,IAAR;AAAcC,QAAAA,QAAQ,EAAE,IAAxB;AAA8BC,QAAAA,QAAQ,EAAG,IAAzC;AAA+CC,QAAAA,SAAS,EAAG;AAA3D,OAAd;AACH;;AAEDlB,IAAAA,WAAW,CAACwE,WAAZ,CAAwBd,GAAxB;AACH;;AAEDa,EAAAA,YAAY,CAACZ,IAAD,EAAOK,IAAP,EAAa;AACrB,QAAI;AACA,UAAIA,IAAI,KAAKvD,KAAb,EAAoB;AAChB,YAAIgE,SAAS,GAAG5E,IAAI,CAAC6E,IAAL,CAAU5C,KAAV,CAAgB6B,IAAhB,CAAhB;AACA,YAAIW,UAAU,GAAG;AACbtB,UAAAA,EAAE,EAAEyB,SAAS,CAACzB,EADD;AAEbC,UAAAA,MAAM,EAAEwB,SAAS,CAACxB,MAFL;AAGbC,UAAAA,KAAK,EAAEuB,SAAS,CAACE,UAAV,GAAuB,GAAvB,GAA6BF,SAAS,CAACG,WAHjC;AAIbzB,UAAAA,KAAK,EAAEsB,SAAS,CAACtB,KAJJ;AAKbG,UAAAA,IAAI,EAAEmB,SAAS,CAACnB;AALH,SAAjB;AAOH,OATD,MASO,IAAIU,IAAI,KAAKtD,KAAb,EAAoB;AACvB+D,QAAAA,SAAS,GAAG5E,IAAI,CAAC6E,IAAL,CAAUP,KAAV,CAAgBR,IAAhB,CAAZ;AACAW,QAAAA,UAAU,GAAG;AACThB,UAAAA,IAAI,EAAEmB,SAAS,CAACnB;AADP,SAAb;AAGH,OALM,MAKA;AACHgB,QAAAA,UAAU,GAAG,IAAb;AACAvC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAYsC,UAAZ;AACA,aAAOA,UAAP;AACH,KArBD,CAqBE,OAAOf,CAAP,EAAU;AACRxB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,CAAZ;AACH;AAEJ;;AAEDsB,EAAAA,MAAM,GAAG;AACL,WAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAE/B,OAAO,CAAC,uBAAD,CAAjB;AAA4C,MAAA,SAAS,EAAC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EACK,KAAKxB,YAAL,CAAkB,CAAlB,CADL,CADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAEwB,OAAO,CAAC,yBAAD,CAAjB;AAA8C,MAAA,SAAS,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EACK,KAAKxB,YAAL,CAAkB,CAAlB,CADL,CALA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAEwB,OAAO,CAAC,yBAAD,CAAjB;AAA8C,MAAA,SAAS,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EACK,KAAKxB,YAAL,CAAkB,CAAlB,CADL,CATA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAEwB,OAAO,CAAC,2BAAD,CAAjB;AAAgD,MAAA,SAAS,EAAC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EACK,KAAKxB,YAAL,CAAkB,CAAlB,CADL,CAbA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAEwB,OAAO,CAAC,2BAAD,CAAjB;AAAgD,MAAA,SAAS,EAAC,eAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EACK,KAAKxB,YAAL,CAAkB,CAAlB,CADL,CAhBA,CAFJ;AA4BH;;AAzMwB;;AA4M7B,eAAeX,IAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport UnitService from \"../Service/unitService\";\r\nimport NotifService, { UNIT_HOVERED } from \"../Service/notifService\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Tooltip from \"rc-tooltip\";\r\nimport 'rc-tooltip/assets/bootstrap.css';\r\n\r\nimport DATA from \"../data\";\r\nconst NA = \"NA\";\r\n\r\nvar notifService = new NotifService();\r\nvar untiService = new UnitService();\r\nconst text = <span>Tooltip Text</span>;\r\nlet dark = [\"NA\"];\r\nlet feudal = [\"Archer\", \"Skirmisher\"];\r\nlet castle = [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", \"NA\", \"NA\", \"Thumb Ring\"];\r\nlet imperial = [\"Arbalester\", \"NA\", \"Heavy Cavalry Archer\", \"Hand Cannoneer\", \"NA\", \"Parthian Tactics\"];\r\nlet postImp = [\"NA\"];\r\nlet x = [];\r\nx.push(dark, feudal, castle, imperial, postImp);\r\n\r\nconst UNITS = \"units\";\r\nconst TECHS = \"techs\";\r\nclass Tree extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {unit: \"\", unitType: \"\", unitInfo: \"\", unitStats: {}, unitTechs: \"\"}\r\n        this.defaultTree = this.defaultTree.bind(this);\r\n        this.generateUnit = this.generateUnit.bind(this);\r\n        this.handleUnitHover = this.handleUnitHover.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        notifService.addObserver(UNIT_HOVERED, this, this.reset)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        notifService.removeObserver(this, UNIT_HOVERED);\r\n    }\r\n\r\n    reset() {\r\n        // this.setState({civ : \"Aztecs\"});\r\n    }\r\n\r\n    defaultTree() {\r\n        // let dark = [\"Archer\", \"Skirmisher\"];\r\n        // let feudal = [\"Archer\", \"Skirmisher\"];\r\n        // let castle = [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", \"NA\", \"NA\", \"Thumb Ring\"];\r\n        // let imperial = [\"Arbalester\", \"NA\", \"Heavy Cavalry Archer\", \"Hand Cannoneer\", \"NA\", \"Parthian Tactics\"];\r\n        // let postImp = [\"Archer\", \"Skirmisher\"];\r\n        // var archer = [2, \"Archer\", \"Crossbowman\"Heavy Cavalry Archer, \"Arbalester\"];\r\n        // var skirm = [2, \"Skirmisher\", \"Elite Skirmisher\"];\r\n        // var ca = [3, \"Cavalry Archer\", \"Heavy Cavalry Archer\"];\r\n        // var hc = [4, \"Hand Cannoneer\"];\r\n        \r\n        // this.units.archer = archer;\r\n        // this.units.skirm = skirm;\r\n        // this.units.ca = ca;\r\n        // this.units.hc = hc;\r\n\r\n        // this.units.push(archer, skirm, ca, hc);\r\n        let x = [];\r\n        x.push(dark, feudal, castle, imperial, postImp);\r\n        this.setState({units : x});\r\n        console.log(this.state.units);\r\n    }\r\n\r\n    generateUnit(i) {\r\n        if (this.props.units !== undefined) {\r\n            return this.props.units[i].map(u => {\r\n                let uImg = u.toLowerCase().replace(' ', '_').replace(' ', '_');\r\n                let classTag = this.determineUnitClassName(this.props.fu, u);\r\n                    let img = <>\r\n                            \r\n                            <Tooltip \r\n                                overlayClassName=\"u-tooltip\"\r\n                                align={{\r\n                                    offset: [\"0 px\", \"-15 px\"],\r\n                                  }}\r\n                                mouseLeaveDelay=\"0.0\"\r\n                                destroyTooltipOnHide={true}\r\n                                placement=\"top\" \r\n                                overlay={this.tooltipContent()}>\r\n                                    \r\n                                <img \r\n                                    className={classTag} name={u}\r\n                                    src={require(\"../Units/\" + uImg + \".png\")}\r\n                                    onMouseEnter={this.handleUnitHover}>\r\n                                    \r\n\r\n                                </img>\r\n                                \r\n                            \r\n                            </Tooltip>\r\n                            \r\n                            \r\n                            \r\n                            </>\r\n                return (img); \r\n            }) \r\n        }\r\n        \r\n    }\r\n\r\n    tooltipContent() {\r\n        try {\r\n            let content = <div></div>;\r\n            if (this.state.unitType === UNITS) {\r\n                content = <>    <h6>{this.state.unit}</h6>\r\n                                {\"HP: \" + this.state.unitStats.HP + \"    \"}<br></br>\r\n                                {\"Attack: \" + this.state.unitStats.Attack}<br></br>\r\n                                {\"Armor: \" + this.state.unitStats.Armor}<br></br>\r\n                                {\"Range: \" + this.state.unitStats.Range}<br></br>\r\n                                {\"Cost: \" + JSON.stringify(this.state.unitStats.Cost)}<br></br>\r\n                                <p>{this.state.unitInfo}</p>\r\n                            </>\r\n            } else if (this.state.unitType === TECHS) {\r\n                content = <>    <h6>{this.state.unit}</h6>\r\n                                {\"Cost: \" + JSON.stringify(this.state.unitStats.Cost)}<br></br>\r\n                                <p>{this.state.unitInfo}</p>\r\n                            </>\r\n            }\r\n            return (content)\r\n        } catch (e) {\r\n            console.log(\"tooltipContent!\");\r\n        }\r\n        \r\n    }\r\n\r\n    /* determine & return className of img icon based on regular, fully upgraded, or NA */\r\n    determineUnitClassName(fu, u) {\r\n        let classTag;\r\n        if (fu !== undefined && this.props.fu.includes(u)) {\r\n            classTag = \"unit unit-fu\"; \r\n        } else if (u !== NA) {\r\n            classTag = \"unit\"; \r\n        } else {\r\n            classTag = \"unit unit-na\";\r\n        }\r\n        return classTag;\r\n    }\r\n\r\n    handleUnitHover(event) {\r\n        let obj = {name: event.target.name, x: event.clientX, y: event.clientY}\r\n        let name = event.target.name;\r\n        let type = UNITS;\r\n        if (name !== undefined && name !== NA) {\r\n            let unit_id = DATA.name_key.units[name];\r\n            type = UNITS;\r\n            if (unit_id === undefined) {\r\n                unit_id = DATA.name_key.techs[name];\r\n                type = TECHS;\r\n            }\r\n\r\n            let unit_info = DATA.key_value[unit_id];\r\n            let unit_stats = this.extractStats(name, type);\r\n            this.setState({unit : event.target.name, unitType: type, unitInfo : unit_info, unitStats : unit_stats});\r\n\r\n        } else {\r\n            console.log(\"NA Hovered!\");\r\n            type = NA;\r\n            this.setState({unit : null, unitType: null, unitInfo : null, unitStats : null});\r\n        }\r\n        \r\n        untiService.unitHovered(obj);\r\n    }\r\n\r\n    extractStats(name, type) {\r\n        try {\r\n            if (type === UNITS) {\r\n                var unit_name = DATA.meta.units[name];\r\n                var unit_stats = {\r\n                    HP: unit_name.HP,\r\n                    Attack: unit_name.Attack,\r\n                    Armor: unit_name.MeleeArmor + \"/\" + unit_name.PierceArmor,\r\n                    Range: unit_name.Range,\r\n                    Cost: unit_name.Cost\r\n                }\r\n            } else if (type === TECHS) {\r\n                unit_name = DATA.meta.techs[name];\r\n                unit_stats = {\r\n                    Cost: unit_name.Cost\r\n                } \r\n            } else {\r\n                unit_stats = null;\r\n                console.log(\"Neither tech or unit stats\");\r\n            }\r\n            console.log(unit_stats);\r\n            return unit_stats;\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n         \r\n            <div className=\"tree\">\r\n            <div><img src={require(\"../Techs/dark_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(0)}\r\n                \r\n            </div>\r\n            <div><img src={require(\"../Techs/feudal_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(1)}\r\n\r\n            </div>\r\n            <div><img src={require(\"../Techs/castle_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(2)}\r\n\r\n            </div>\r\n            <div><img src={require(\"../Techs/imperial_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(3)}\r\n            </div>\r\n            <div><img src={require(\"../Techs/imperial_age.png\")} className=\"age age-empty\"></img>\r\n                {this.generateUnit(4)}\r\n\r\n            </div>\r\n            {/* <ReactTooltip className=\"tooltip\" place=\"top\" type=\"dark\" effect=\"float\">\r\n            </ReactTooltip> */}\r\n            \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Tree;"]},"metadata":{},"sourceType":"module"}