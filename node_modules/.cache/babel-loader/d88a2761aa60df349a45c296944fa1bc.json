{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\zone\\\\zone\\\\src\\\\techtree\\\\panels\\\\treeParent.js\";\nimport React, { Component } from \"react\";\nimport TreePanel from \"./treePanel\"; // import {TOWNCENTRE, RANGE, BARRACKS, STABLE, SIEGE, CASTLE, BLACSKMITH, MONASTERY, UNIVERSITY, ECONOMY, DOCK, DEFENSE} from \"./UNIT_NAMES\";\n\nimport CivContext from \"../CivContext\";\nimport NotifService, { CIV_SELECTED } from \"../notifService\";\nimport CivService from \"../civService\";\nvar notifService = new NotifService(); // var civService = new CivService();\n\nconst NA = \"NA\";\nvar RANGE = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\nvar BARRACKS = [[\"Militia\"], [\"Man-at-arms\", \"Spearman\", NA, NA, \"Supplies\"], [\"Long Swordsman\", \"Pikeman\", NA, NA, \"Squires\", \"Arson\"], [\"Two-handed Swordsman\", \"Halberdier\", NA, NA], [\"Champion\", NA, NA, NA]];\nvar STABLE = [[NA], [\"Scout Cavalry\", NA, NA, NA, NA, \"Bloodlines\"], [\"Light Cavalry\", \"Knight\", \"Camel Rider\", NA, NA, \"Husbandry\"], [\"Hussar\", \"Cavalier\", \"Heavy Camel Rider\", NA, NA], [NA, \"Paladin\", NA]];\nvar SIEGE = [[NA], [NA], [\"Battering Ram\", \"Mangonel\", \"Scorpion\", NA, NA, NA, NA], [\"Capped Ram\", \"Onager\", \"Heavy Scorpion\", NA, NA, NA, NA], [\"Siege Ram\", \"Siege Onager\", NA, \"Bombard Cannon\"]];\nvar CASTLE = [[NA], [NA], [\"Longbowman\", NA, \"Petard\", NA, \"Unique Tech 1\", NA, NA], [\"Elite Longbowman\", \"Trebuchet\", NA, NA, \"Unique Tech 2\", NA, NA], [NA, NA, \"Hoardings\", \"Sappers\", \"Conscription\", \"Spies Treason\"]];\nvar DEFENSE = [[\"Outpost\", NA, \"House\"], [NA, \"Watch Tower\", NA, \"Palisade Wall\", \"Stone Wall\", \"Palisade Gate\", \"Gate\"], [NA, \"Guard Tower\", NA, NA, \"Fortified Wall\"], [NA, \"Keep\", \"Bombard Tower Build\"], [NA]];\nvar MONASTERY = [[NA], [NA], [\"Monk\", \"Redemption\", \"Fervor\", \"Sanctity\", \"Atonement\", \"Herbal Medicine\", \"Heresy\"], [NA, \"Block Printing\", \"Illumination\", \"Faith\", \"Theocracy\"], [NA]];\nvar BLACSKMITH = [[NA], [\"Forging\", \"Scale Mail Armor\", \"Scale Barding Armor\", \"Fletching\", \"Padded Archer Armor\", NA, NA], [\"Iron Casting\", \"Chain Mail Armor\", \"Chain Barding Armor\", \"Bodkin Arrow\", \"Leather Archer Armor\", NA, NA], [\"Blast Furnace\", \"Plate Mail Armor\", \"Plate Barding Armor\", \"Bracer\", \"Ring Archer Armor\", NA, NA], [NA]];\nvar UNIVERSITY = [[NA], [NA], [\"Masonry\", \"Fortified Wall\", \"Ballistics\", \"Guard Tower\", \"Heated Shot\", \"Treadmill Crane\", \"Murder Holes\"], [\"Architecture\", \"Chemistry\", \"Siege Engineers\", \"Keep\", \"Arrowslits\", NA, NA], [NA, \"Bombard Tower\"]];\nvar ECONOMY = [[NA], [\"Trade Cart\", NA, \"Coinage\", \"Double-bit Axe\", \"Horse Collar\", \"Gold Mining\", \"Stone Mining\"], [NA, \"Caravan\", \"Banking\", \"Bow Saw\", \"Heavy Plow\", \"Gold Shaft Mining\", \"Stone Shaft Mining\"], [NA, \"Guilds\", NA, \"Two-man Saw\", \"Crop Rotation\", NA, NA], [NA]];\nvar DOCK = [[NA, NA, NA, \"Fishing Ship\", \"Transport Ship\"], [\"Galley\", \"Demolition Raft\", \"Fire Galley\", NA, NA, \"Trade Cog\"], [\"War Galley\", \"Demolition Ship\", \"Fire Ship\", NA, \"Gillnets\", \"Careening\"], [\"Galleon\", \"Heavy Demo Ship\", \"Fast Fire Ship\", \"Cannon Galleon\", \"Dry Dock\", \"Shipwright\"], [NA, NA, NA, \"Elite Cannon Galleon\"]];\nvar TOWNCENTRE = [[\"Villager\", \"Loom\", NA, NA, \"Feudal Age\"], [NA, NA, \"Wheelbarrow\", \"Town Watch\", \"Castle Age\"], [NA, NA, \"Hand Cart\", \"Town Patrol\", \"Imperial Age\"], [NA], [NA]];\nexport default class TreeParent extends Component {\n  constructor(props) {\n    super(props);\n    this.xRange = [...RANGE];\n    this.state = {\n      civ: \"Aztecs\"\n    };\n    this.updateTree = this.updateTree.bind(this);\n    console.log(\"State!\");\n  }\n\n  componentDidMount() {\n    notifService.addObserver(CIV_SELECTED, this, this.updateTree);\n  }\n\n  componentWillUnmount() {\n    notifService.removeObserver(this, CIV_SELECTED);\n  }\n  /* value = civ selected */\n\n\n  updateTree(value) {\n    console.log(value);\n    this.xRange = [...RANGE];\n    RANGE = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\n\n    switch (value) {\n      case \"Berbers\":\n        this.disable(this.xRange, [\"Cavalry Archer\", \"Hand Cannoneer\", \"Thumb Ring\", \"Parthian Tactics\", \"Heavy Cavalry Archer\"]);\n        break;\n\n      case \"Turks\":\n        this.disable(this.xRange, [\"Arbalester\", \"Elite Skirmisher\"]);\n        break;\n    }\n  }\n\n  disable(build, units) {\n    let newTree = Array.from(build);\n    let disableLength = units.length;\n\n    for (let i = 0; disableLength > 0 && i <= 4; i++) {\n      newTree[i].forEach(unit => {\n        units.forEach(x => {\n          if (unit === x) {\n            let k = newTree[i].indexOf(unit);\n            newTree[i][k] = NA;\n            disableLength--;\n          }\n        });\n      });\n    }\n\n    console.log(newTree);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" HEADING \"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TreePanel, {\n      build: \"Archery Range\",\n      tree: this.xRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["D:/Coding/GitHub/zone/zone/src/techtree/panels/treeParent.js"],"names":["React","Component","TreePanel","CivContext","NotifService","CIV_SELECTED","CivService","notifService","NA","RANGE","BARRACKS","STABLE","SIEGE","CASTLE","DEFENSE","MONASTERY","BLACSKMITH","UNIVERSITY","ECONOMY","DOCK","TOWNCENTRE","TreeParent","constructor","props","xRange","state","civ","updateTree","bind","console","log","componentDidMount","addObserver","componentWillUnmount","removeObserver","value","disable","build","units","newTree","Array","from","disableLength","length","i","forEach","unit","x","k","indexOf","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,IAAsBC,YAAtB,QAAyC,iBAAzC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAGA,IAAIC,YAAY,GAAG,IAAIH,YAAJ,EAAnB,C,CACA;;AACA,MAAMI,EAAE,GAAG,IAAX;AAEA,IAAIC,KAAK,GAAG,CAAC,CAACD,EAAD,CAAD,EAAO,CAAC,QAAD,EAAW,YAAX,CAAP,EAAiC,CAAC,aAAD,EAAgB,kBAAhB,EAAoC,gBAApC,EAAsDA,EAAtD,EAA0DA,EAA1D,EAA8D,YAA9D,CAAjC,EAA8G,CAAC,YAAD,EAAeA,EAAf,EAAmB,sBAAnB,EAA2C,gBAA3C,EAA6DA,EAA7D,EAAiE,kBAAjE,CAA9G,EAAoM,CAACA,EAAD,CAApM,CAAZ;AACA,IAAIE,QAAQ,GAAG,CAAC,CAAC,SAAD,CAAD,EAAc,CAAC,aAAD,EAAgB,UAAhB,EAA4BF,EAA5B,EAAgCA,EAAhC,EAAoC,UAApC,CAAd,EAA+D,CAAC,gBAAD,EAAmB,SAAnB,EAA8BA,EAA9B,EAAkCA,EAAlC,EAAsC,SAAtC,EAAiD,OAAjD,CAA/D,EAA2H,CAAC,sBAAD,EAAyB,YAAzB,EAAuCA,EAAvC,EAA2CA,EAA3C,CAA3H,EAA2K,CAAC,UAAD,EAAaA,EAAb,EAAiBA,EAAjB,EAAqBA,EAArB,CAA3K,CAAf;AACA,IAAIG,MAAM,GAAG,CAAC,CAACH,EAAD,CAAD,EAAO,CAAC,eAAD,EAAkBA,EAAlB,EAAsBA,EAAtB,EAA0BA,EAA1B,EAA8BA,EAA9B,EAAkC,YAAlC,CAAP,EAAwD,CAAC,eAAD,EAAkB,QAAlB,EAA4B,aAA5B,EAA2CA,EAA3C,EAA+CA,EAA/C,EAAmD,WAAnD,CAAxD,EAAyH,CAAC,QAAD,EAAW,UAAX,EAAuB,mBAAvB,EAA4CA,EAA5C,EAAgDA,EAAhD,CAAzH,EAA8K,CAACA,EAAD,EAAK,SAAL,EAAgBA,EAAhB,CAA9K,CAAb;AACA,IAAII,KAAK,GAAG,CAAC,CAACJ,EAAD,CAAD,EAAO,CAACA,EAAD,CAAP,EAAa,CAAC,eAAD,EAAkB,UAAlB,EAA8B,UAA9B,EAAyCA,EAAzC,EAA6CA,EAA7C,EAAiDA,EAAjD,EAAqDA,EAArD,CAAb,EAAuE,CAAC,YAAD,EAAe,QAAf,EAAyB,gBAAzB,EAA0CA,EAA1C,EAA8CA,EAA9C,EAAkDA,EAAlD,EAAsDA,EAAtD,CAAvE,EAAkI,CAAC,WAAD,EAAc,cAAd,EAA8BA,EAA9B,EAAkC,gBAAlC,CAAlI,CAAZ;AACA,IAAIK,MAAM,GAAG,CAAC,CAACL,EAAD,CAAD,EAAO,CAACA,EAAD,CAAP,EAAa,CAAC,YAAD,EAAeA,EAAf,EAAmB,QAAnB,EAA6BA,EAA7B,EAAiC,eAAjC,EAAkDA,EAAlD,EAAsDA,EAAtD,CAAb,EAAwE,CAAC,kBAAD,EAAqB,WAArB,EAAkCA,EAAlC,EAAsCA,EAAtC,EAA0C,eAA1C,EAA2DA,EAA3D,EAA+DA,EAA/D,CAAxE,EAA4I,CAACA,EAAD,EAAIA,EAAJ,EAAQ,WAAR,EAAqB,SAArB,EAAgC,cAAhC,EAAgD,eAAhD,CAA5I,CAAb;AACA,IAAIM,OAAO,GAAG,CAAC,CAAC,SAAD,EAAYN,EAAZ,EAAgB,OAAhB,CAAD,EAA2B,CAACA,EAAD,EAAK,aAAL,EAAoBA,EAApB,EAAwB,eAAxB,EAAyC,YAAzC,EAAuD,eAAvD,EAAwE,MAAxE,CAA3B,EAA4G,CAACA,EAAD,EAAK,aAAL,EAAoBA,EAApB,EAAwBA,EAAxB,EAA4B,gBAA5B,CAA5G,EAA2J,CAACA,EAAD,EAAK,MAAL,EAAa,qBAAb,CAA3J,EAAgM,CAACA,EAAD,CAAhM,CAAd;AACA,IAAIO,SAAS,GAAG,CAAC,CAACP,EAAD,CAAD,EAAO,CAACA,EAAD,CAAP,EAAa,CAAC,MAAD,EAAS,YAAT,EAAuB,QAAvB,EAAiC,UAAjC,EAA6C,WAA7C,EAAyD,iBAAzD,EAA4E,QAA5E,CAAb,EAAoG,CAACA,EAAD,EAAK,gBAAL,EAAuB,cAAvB,EAAuC,OAAvC,EAAgD,WAAhD,CAApG,EAAkK,CAACA,EAAD,CAAlK,CAAhB;AACA,IAAIQ,UAAU,GAAG,CAAC,CAACR,EAAD,CAAD,EAAO,CAAC,SAAD,EAAY,kBAAZ,EAAgC,qBAAhC,EAAuD,WAAvD,EAAoE,qBAApE,EAA2FA,EAA3F,EAA+FA,EAA/F,CAAP,EAA2G,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,qBAArC,EAA4D,cAA5D,EAA4E,sBAA5E,EAAoGA,EAApG,EAAwGA,EAAxG,CAA3G,EAAwN,CAAC,eAAD,EAAkB,kBAAlB,EAAsC,qBAAtC,EAA6D,QAA7D,EAAuE,mBAAvE,EAA4FA,EAA5F,EAAgGA,EAAhG,CAAxN,EAA6T,CAACA,EAAD,CAA7T,CAAjB;AACA,IAAIS,UAAU,GAAG,CAAC,CAACT,EAAD,CAAD,EAAO,CAACA,EAAD,CAAP,EAAa,CAAC,SAAD,EAAY,gBAAZ,EAA8B,YAA9B,EAA4C,aAA5C,EAA2D,aAA3D,EAA0E,iBAA1E,EAA6F,cAA7F,CAAb,EAA2H,CAAC,cAAD,EAAiB,WAAjB,EAA8B,iBAA9B,EAAiD,MAAjD,EAAyD,YAAzD,EAAuEA,EAAvE,EAA2EA,EAA3E,CAA3H,EAA2M,CAACA,EAAD,EAAK,eAAL,CAA3M,CAAjB;AACA,IAAIU,OAAO,GAAG,CAAC,CAACV,EAAD,CAAD,EAAO,CAAC,YAAD,EAAeA,EAAf,EAAmB,SAAnB,EAA8B,gBAA9B,EAAgD,cAAhD,EAAgE,aAAhE,EAA+E,cAA/E,CAAP,EAAuG,CAACA,EAAD,EAAK,SAAL,EAAgB,SAAhB,EAA2B,SAA3B,EAAsC,YAAtC,EAAoD,mBAApD,EAAyE,oBAAzE,CAAvG,EAAuM,CAACA,EAAD,EAAK,QAAL,EAAeA,EAAf,EAAmB,aAAnB,EAAkC,eAAlC,EAAmDA,EAAnD,EAAuDA,EAAvD,CAAvM,EAAmQ,CAACA,EAAD,CAAnQ,CAAd;AACA,IAAIW,IAAI,GAAG,CAAC,CAACX,EAAD,EAAKA,EAAL,EAASA,EAAT,EAAa,cAAb,EAA6B,gBAA7B,CAAD,EAAiD,CAAC,QAAD,EAAW,iBAAX,EAA8B,aAA9B,EAA6CA,EAA7C,EAAiDA,EAAjD,EAAqD,WAArD,CAAjD,EAAoH,CAAC,YAAD,EAAe,iBAAf,EAAkC,WAAlC,EAA+CA,EAA/C,EAAmD,UAAnD,EAA+D,WAA/D,CAApH,EAAiM,CAAC,SAAD,EAAY,iBAAZ,EAA+B,gBAA/B,EAAiD,gBAAjD,EAAmE,UAAnE,EAA+E,YAA/E,CAAjM,EAA+R,CAACA,EAAD,EAAKA,EAAL,EAASA,EAAT,EAAa,sBAAb,CAA/R,CAAX;AACA,IAAIY,UAAU,GAAG,CAAC,CAAC,UAAD,EAAa,MAAb,EAAqBZ,EAArB,EAAyBA,EAAzB,EAA6B,YAA7B,CAAD,EAA6C,CAACA,EAAD,EAAKA,EAAL,EAAS,aAAT,EAAwB,YAAxB,EAAsC,YAAtC,CAA7C,EAAkG,CAACA,EAAD,EAAKA,EAAL,EAAS,WAAT,EAAsB,aAAtB,EAAqC,cAArC,CAAlG,EAAwJ,CAACA,EAAD,CAAxJ,EAA8J,CAACA,EAAD,CAA9J,CAAjB;AAGA,eAAe,MAAMa,UAAN,SAAyBpB,SAAzB,CAAmC;AAE9CqB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SADnBC,MACmB,GADV,CAAC,GAAGf,KAAJ,CACU;AAEf,SAAKgB,KAAL,GAAa;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBxB,IAAAA,YAAY,CAACyB,WAAb,CAAyB3B,YAAzB,EAAuC,IAAvC,EAA6C,KAAKsB,UAAlD;AACH;;AAEDM,EAAAA,oBAAoB,GAAG;AACnB1B,IAAAA,YAAY,CAAC2B,cAAb,CAA4B,IAA5B,EAAkC7B,YAAlC;AACH;AAED;;;AACAsB,EAAAA,UAAU,CAACQ,KAAD,EAAQ;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,SAAKX,MAAL,GAAc,CAAC,GAAGf,KAAJ,CAAd;AACAA,IAAAA,KAAK,GAAG,CAAC,CAACD,EAAD,CAAD,EAAO,CAAC,QAAD,EAAW,YAAX,CAAP,EAAiC,CAAC,aAAD,EAAgB,kBAAhB,EAAoC,gBAApC,EAAsDA,EAAtD,EAA0DA,EAA1D,EAA8D,YAA9D,CAAjC,EAA8G,CAAC,YAAD,EAAeA,EAAf,EAAmB,sBAAnB,EAA2C,gBAA3C,EAA6DA,EAA7D,EAAiE,kBAAjE,CAA9G,EAAoM,CAACA,EAAD,CAApM,CAAR;;AAEA,YAAQ2B,KAAR;AACI,WAAK,SAAL;AACI,aAAKC,OAAL,CAAa,KAAKZ,MAAlB,EAA0B,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,YAArC,EAAmD,kBAAnD,EAAuE,sBAAvE,CAA1B;AACA;;AACJ,WAAK,OAAL;AACI,aAAKY,OAAL,CAAa,KAAKZ,MAAlB,EAA0B,CAAC,YAAD,EAAe,kBAAf,CAA1B;AACA;AANR;AAQH;;AAEDY,EAAAA,OAAO,CAACC,KAAD,EAAQC,KAAR,EAAe;AAClB,QAAIC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAWJ,KAAX,CAAd;AACA,QAAIK,aAAa,GAAGJ,KAAK,CAACK,MAA1B;;AAEA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcF,aAAa,GAAC,CAAd,IAAmBE,CAAC,IAAE,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AACxCL,MAAAA,OAAO,CAACK,CAAD,CAAP,CAAWC,OAAX,CAAmBC,IAAI,IAAI;AACvBR,QAAAA,KAAK,CAACO,OAAN,CAAcE,CAAC,IAAI;AACf,cAAID,IAAI,KAAKC,CAAb,EAAgB;AACZ,gBAAIC,CAAC,GAAGT,OAAO,CAACK,CAAD,CAAP,CAAWK,OAAX,CAAmBH,IAAnB,CAAR;AACAP,YAAAA,OAAO,CAACK,CAAD,CAAP,CAAWI,CAAX,IAAgBxC,EAAhB;AACAkC,YAAAA,aAAa;AAChB;AACJ,SAND;AAOH,OARD;AASH;;AAEDb,IAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACH;;AAEDW,EAAAA,MAAM,GAAG;AAEL,WACI,0CAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,eAAjB;AAAiC,MAAA,IAAI,EAAE,KAAK1B,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CADJ,CAFJ,CAJA,CADJ;AAsCH;;AA7F6C","sourcesContent":["import React, {Component} from \"react\";\r\nimport TreePanel from \"./treePanel\";\r\n// import {TOWNCENTRE, RANGE, BARRACKS, STABLE, SIEGE, CASTLE, BLACSKMITH, MONASTERY, UNIVERSITY, ECONOMY, DOCK, DEFENSE} from \"./UNIT_NAMES\";\r\nimport CivContext from \"../CivContext\";\r\nimport NotifService, {CIV_SELECTED} from \"../notifService\";\r\nimport CivService from \"../civService\";\r\n\r\n\r\nvar notifService = new NotifService();\r\n// var civService = new CivService();\r\nconst NA = \"NA\";\r\n\r\nvar RANGE = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\r\nvar BARRACKS = [[\"Militia\"], [\"Man-at-arms\", \"Spearman\", NA, NA, \"Supplies\"], [\"Long Swordsman\", \"Pikeman\", NA, NA, \"Squires\", \"Arson\",], [\"Two-handed Swordsman\", \"Halberdier\", NA, NA], [\"Champion\", NA, NA, NA]];\r\nvar STABLE = [[NA], [\"Scout Cavalry\", NA, NA, NA, NA, \"Bloodlines\"], [\"Light Cavalry\", \"Knight\", \"Camel Rider\", NA, NA, \"Husbandry\"], [\"Hussar\", \"Cavalier\", \"Heavy Camel Rider\", NA, NA], [NA, \"Paladin\", NA]];\r\nvar SIEGE = [[NA], [NA], [\"Battering Ram\", \"Mangonel\", \"Scorpion\",NA, NA, NA, NA], [\"Capped Ram\", \"Onager\", \"Heavy Scorpion\",NA, NA, NA, NA], [\"Siege Ram\", \"Siege Onager\", NA, \"Bombard Cannon\"]];\r\nvar CASTLE = [[NA], [NA], [\"Longbowman\", NA, \"Petard\", NA, \"Unique Tech 1\", NA, NA], [\"Elite Longbowman\", \"Trebuchet\", NA, NA, \"Unique Tech 2\", NA, NA], [NA,NA, \"Hoardings\", \"Sappers\", \"Conscription\", \"Spies Treason\"]];\r\nvar DEFENSE = [[\"Outpost\", NA, \"House\"], [NA, \"Watch Tower\", NA, \"Palisade Wall\", \"Stone Wall\", \"Palisade Gate\", \"Gate\"], [NA, \"Guard Tower\", NA, NA, \"Fortified Wall\"], [NA, \"Keep\", \"Bombard Tower Build\"], [NA]];\r\nvar MONASTERY = [[NA], [NA], [\"Monk\", \"Redemption\", \"Fervor\", \"Sanctity\", \"Atonement\",\"Herbal Medicine\", \"Heresy\"], [NA, \"Block Printing\", \"Illumination\", \"Faith\", \"Theocracy\"], [NA]];\r\nvar BLACSKMITH = [[NA], [\"Forging\", \"Scale Mail Armor\", \"Scale Barding Armor\", \"Fletching\", \"Padded Archer Armor\", NA, NA], [\"Iron Casting\", \"Chain Mail Armor\", \"Chain Barding Armor\", \"Bodkin Arrow\", \"Leather Archer Armor\", NA, NA], [\"Blast Furnace\", \"Plate Mail Armor\", \"Plate Barding Armor\", \"Bracer\", \"Ring Archer Armor\", NA, NA], [NA]];\r\nvar UNIVERSITY = [[NA], [NA], [\"Masonry\", \"Fortified Wall\", \"Ballistics\", \"Guard Tower\", \"Heated Shot\", \"Treadmill Crane\", \"Murder Holes\"], [\"Architecture\", \"Chemistry\", \"Siege Engineers\", \"Keep\", \"Arrowslits\", NA, NA], [NA, \"Bombard Tower\"]];\r\nvar ECONOMY = [[NA], [\"Trade Cart\", NA, \"Coinage\", \"Double-bit Axe\", \"Horse Collar\", \"Gold Mining\", \"Stone Mining\"], [NA, \"Caravan\", \"Banking\", \"Bow Saw\", \"Heavy Plow\", \"Gold Shaft Mining\", \"Stone Shaft Mining\"], [NA, \"Guilds\", NA, \"Two-man Saw\", \"Crop Rotation\", NA, NA], [NA]];\r\nvar DOCK = [[NA, NA, NA, \"Fishing Ship\", \"Transport Ship\"], [\"Galley\", \"Demolition Raft\", \"Fire Galley\", NA, NA, \"Trade Cog\"], [\"War Galley\", \"Demolition Ship\", \"Fire Ship\", NA, \"Gillnets\", \"Careening\"], [\"Galleon\", \"Heavy Demo Ship\", \"Fast Fire Ship\", \"Cannon Galleon\", \"Dry Dock\", \"Shipwright\"], [NA, NA, NA, \"Elite Cannon Galleon\"]];\r\nvar TOWNCENTRE = [[\"Villager\", \"Loom\", NA, NA, \"Feudal Age\"], [NA, NA, \"Wheelbarrow\", \"Town Watch\", \"Castle Age\"], [NA, NA, \"Hand Cart\", \"Town Patrol\", \"Imperial Age\"], [NA], [NA]];\r\n\r\n\r\nexport default class TreeParent extends Component {\r\n    xRange = [...RANGE];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {civ: \"Aztecs\"};\r\n        this.updateTree = this.updateTree.bind(this);\r\n        console.log(\"State!\");\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        notifService.addObserver(CIV_SELECTED, this, this.updateTree);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        notifService.removeObserver(this, CIV_SELECTED);\r\n    }\r\n\r\n    /* value = civ selected */\r\n    updateTree(value) {\r\n        console.log(value)\r\n        this.xRange = [...RANGE];\r\n        RANGE = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\r\n\r\n        switch (value) {\r\n            case \"Berbers\":\r\n                this.disable(this.xRange, [\"Cavalry Archer\", \"Hand Cannoneer\", \"Thumb Ring\", \"Parthian Tactics\", \"Heavy Cavalry Archer\"]);\r\n                break;\r\n            case \"Turks\":\r\n                this.disable(this.xRange, [\"Arbalester\", \"Elite Skirmisher\"]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    disable(build, units) {\r\n        let newTree = Array.from(build);\r\n        let disableLength = units.length;\r\n\r\n        for (let i=0; disableLength>0 && i<=4; i++) {\r\n            newTree[i].forEach(unit => {\r\n                units.forEach(x => {\r\n                    if (unit === x) {\r\n                        let k = newTree[i].indexOf(unit);\r\n                        newTree[i][k] = NA;\r\n                        disableLength--;\r\n                    } \r\n                });\r\n            });\r\n        }        \r\n\r\n        console.log(newTree);\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <>\r\n            {/* <CivContext.Consumer> \r\n                {value => this.updateTree(value)}\r\n            </CivContext.Consumer>  */}\r\n            <div>\r\n                <h5> HEADING </h5>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                        <TreePanel build=\"Archery Range\" tree={this.xRange}/></tr>\r\n                        {/* <TreePanel build=\"Barracks\" tree={barracks}/>\r\n                        <TreePanel build=\"Stable\" tree={stable}/>\r\n                        \r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Siege Workshop\" tree={siege}/>\r\n                        <TreePanel build=\"Castle\" tree={castle}/>\r\n                        <TreePanel build=\"Defense\" tree={defense}/>\r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Blacksmith\" tree={blacksmith}/>\r\n                        <TreePanel build=\"University\" tree={university}/>\r\n                        <TreePanel build=\"Monastery\" tree={monastery}/>\r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Town Center\" tree={townCentre}/>\r\n                        <TreePanel build=\"Economic Buildings\" tree={economy}/>\r\n                        <TreePanel build=\"Dock\" tree={dock}/>\r\n                        </tr> */}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n                    \r\n            \r\n        )\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}