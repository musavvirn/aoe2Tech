{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\zone\\\\zone\\\\src\\\\techtree\\\\panels\\\\tree.js\";\nimport React, { Component } from \"react\";\nimport UnitService from \"../Service/unitService\";\nimport NotifService, { UNIT_HOVERED } from \"../Service/notifService\";\nimport ReactTooltip from 'react-tooltip';\nimport Tooltip from \"rc-tooltip\";\nimport 'rc-tooltip/assets/bootstrap.css';\nimport DATA from \"../data\";\nconst NA = \"NA\";\nconst DIS = \"disable-\";\nconst UNITS = \"units\";\nconst TECHS = \"techs\";\nvar notifService = new NotifService();\nvar untiService = new UnitService();\nconst text = React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Tooltip Text\");\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unit: \"\",\n      unitType: \"\",\n      unitInfo: \"\",\n      unitStats: {},\n      unitTechs: \"\"\n    };\n    this.generateUnit = this.generateUnit.bind(this);\n    this.handleUnitHover = this.handleUnitHover.bind(this);\n  }\n\n  componentDidMount() {\n    notifService.addObserver(UNIT_HOVERED, this, this.reset);\n  }\n\n  componentWillUnmount() {\n    notifService.removeObserver(this, UNIT_HOVERED);\n  }\n\n  reset() {}\n\n  generateUnit(i) {\n    if (this.props.units !== undefined) {\n      return this.props.units[i].map(u => {\n        let classTag = this.determineUnitClassName(this.props.fu, u);\n        let uImg = u.toLowerCase().replace(' ', '_').replace(' ', '_');\n\n        if (uImg.startsWith(DIS)) {\n          uImg = uImg.replace(DIS, '');\n          return this.unitDisableIcon(classTag, u, uImg);\n        } else {\n          return this.unitRegularIcon(classTag, u, uImg);\n        }\n      });\n    }\n  }\n  /* generates regular unit icon path */\n\n\n  unitRegularIcon(classTag, u, uImg) {\n    let img = React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n      overlayClassName: \"u-tooltip\",\n      align: {\n        offset: [\"0 px\", \"-15 px\"]\n      },\n      mouseLeaveDelay: \"0.0\",\n      destroyTooltipOnHide: true,\n      placement: \"top\",\n      overlay: this.tooltipContent(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classTag,\n      name: u,\n      src: require(\"../Units/\" + uImg + \".png\"),\n      onMouseEnter: this.handleUnitHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n    return img;\n  }\n  /* generates DISABLED red cross + regular unit icon path */\n\n\n  unitDisableIcon(classTag, u, uImg) {\n    let img = React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      className: \"x-overlay\",\n      src: require(\"../Units/x.png\"),\n      onMouseEnter: this.handleUnitHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      overlayClassName: \"u-tooltip\",\n      align: {\n        offset: [\"0 px\", \"-15 px\"]\n      },\n      mouseLeaveDelay: \"0.0\",\n      destroyTooltipOnHide: true,\n      placement: \"top\",\n      overlay: this.tooltipContent(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: classTag,\n      name: u,\n      src: require(\"../Units/\" + uImg + \".png\"),\n      onMouseEnter: this.handleUnitHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n    return img;\n  }\n\n  tooltipContent() {\n    try {\n      let content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n\n      if (this.state.unitType === UNITS) {\n        content = React.createElement(React.Fragment, null, \"    \", React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, this.state.unit), \"HP: \" + this.state.unitStats.HP + \"    \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), \"Attack: \" + this.state.unitStats.Attack, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), \"Armor: \" + this.state.unitStats.Armor, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), \"Range: \" + this.state.unitStats.Range, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), \"Cost: \" + JSON.stringify(this.state.unitStats.Cost), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, this.state.unitInfo));\n      } else if (this.state.unitType === TECHS) {\n        content = React.createElement(React.Fragment, null, \"    \", React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, this.state.unit), \"Cost: \" + JSON.stringify(this.state.unitStats.Cost), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, this.state.unitInfo));\n      }\n\n      return content;\n    } catch (e) {\n      console.log(\"tooltipContent!\");\n    }\n  }\n  /* determine & return className of img icon based on regular, fully upgraded, or NA */\n\n\n  determineUnitClassName(fu, u) {\n    let classTag;\n\n    if (fu !== undefined && this.props.fu.includes(u)) {\n      classTag = \"unit unit-fu\";\n    } else if (u !== NA) {\n      classTag = \"unit\";\n    } else {\n      classTag = \"unit unit-na\";\n    }\n\n    return classTag;\n  }\n\n  handleUnitHover(event) {\n    let obj = {\n      name: event.target.name,\n      x: event.clientX,\n      y: event.clientY\n    };\n    let name = event.target.name;\n    let unit_id = undefined;\n    let type = UNITS;\n\n    if (name !== undefined && name !== NA) {\n      unit_id = DATA.name_key.units[name];\n      type = UNITS;\n\n      if (unit_id === undefined) {\n        if (name === \"Unique Tech 1\") {\n          name = this.props.UT[0];\n        } else if (name === \"Unique Tech 2\") {\n          name = this.props.UT[1];\n        } else if (name === \"Spies or Treason\") {\n          name = \"Spies/Treason\";\n        } else {}\n\n        type = TECHS;\n        unit_id = DATA.name_key.techs[name];\n      }\n\n      let unit_info = DATA.key_value[unit_id];\n      let unit_stats = this.extractStats(name, type);\n      this.setState({\n        unit: name,\n        unitType: type,\n        unitInfo: unit_info,\n        unitStats: unit_stats\n      });\n    } else {\n      console.log(\"NA Hovered!\");\n      type = NA;\n      this.setState({\n        unit: null,\n        unitType: null,\n        unitInfo: null,\n        unitStats: null\n      });\n    }\n\n    untiService.unitHovered(obj);\n  }\n\n  extractStats(name, type) {\n    try {\n      if (type === UNITS) {\n        var unit_name = DATA.meta.units[name];\n        var unit_stats = {\n          HP: unit_name.HP,\n          Attack: unit_name.Attack,\n          Armor: unit_name.MeleeArmor + \"/\" + unit_name.PierceArmor,\n          Range: unit_name.Range,\n          Cost: unit_name.Cost\n        };\n      } else if (type === TECHS) {\n        if (name === \"Unique Tech 1\") {\n          unit_name = DATA.meta.techs[this.props.UT[0]];\n        } else if (name === \"Unique Tech 2\") {\n          unit_name = DATA.meta.techs[this.props.UT[1]];\n        } else if (name === \"Spies or Treason\") {\n          unit_name = DATA.meta.techs[\"Spies/Treason\"];\n        } else {\n          unit_name = DATA.meta.techs[name];\n        }\n\n        unit_stats = {\n          Cost: unit_name.Cost\n        };\n      } else {\n        unit_stats = null;\n        console.log(\"Neither tech or unit stats\");\n      }\n\n      console.log(unit_stats);\n      return unit_stats;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/dark_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), this.generateUnit(0)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/feudal_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), this.generateUnit(1)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/castle_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), this.generateUnit(2)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/imperial_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), this.generateUnit(3)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/imperial_age.png\"),\n      className: \"age age-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), this.generateUnit(4)));\n  }\n\n}\n\nexport default Tree;","map":{"version":3,"sources":["D:/Coding/GitHub/zone/zone/src/techtree/panels/tree.js"],"names":["React","Component","UnitService","NotifService","UNIT_HOVERED","ReactTooltip","Tooltip","DATA","NA","DIS","UNITS","TECHS","notifService","untiService","text","Tree","constructor","props","state","unit","unitType","unitInfo","unitStats","unitTechs","generateUnit","bind","handleUnitHover","componentDidMount","addObserver","reset","componentWillUnmount","removeObserver","i","units","undefined","map","u","classTag","determineUnitClassName","fu","uImg","toLowerCase","replace","startsWith","unitDisableIcon","unitRegularIcon","img","offset","tooltipContent","require","content","HP","Attack","Armor","Range","JSON","stringify","Cost","e","console","log","includes","event","obj","name","target","x","clientX","y","clientY","unit_id","type","name_key","UT","techs","unit_info","key_value","unit_stats","extractStats","setState","unitHovered","unit_name","meta","MeleeArmor","PierceArmor","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport UnitService from \"../Service/unitService\";\r\nimport NotifService, { UNIT_HOVERED } from \"../Service/notifService\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Tooltip from \"rc-tooltip\";\r\nimport 'rc-tooltip/assets/bootstrap.css';\r\n\r\nimport DATA from \"../data\";\r\nconst NA = \"NA\";\r\nconst DIS = \"disable-\";\r\nconst UNITS = \"units\";\r\nconst TECHS = \"techs\";\r\n\r\nvar notifService = new NotifService();\r\nvar untiService = new UnitService();\r\nconst text = <span>Tooltip Text</span>;\r\n\r\n\r\n\r\nclass Tree extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {unit: \"\", unitType: \"\", unitInfo: \"\", unitStats: {}, unitTechs: \"\"}\r\n        this.generateUnit = this.generateUnit.bind(this);\r\n        this.handleUnitHover = this.handleUnitHover.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        notifService.addObserver(UNIT_HOVERED, this, this.reset)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        notifService.removeObserver(this, UNIT_HOVERED);\r\n    }\r\n\r\n    reset() {\r\n    }\r\n\r\n    generateUnit(i) {\r\n        if (this.props.units !== undefined) {\r\n            return this.props.units[i].map(u => {\r\n                let classTag = this.determineUnitClassName(this.props.fu, u);\r\n                let uImg = u.toLowerCase().replace(' ', '_').replace(' ', '_');\r\n\r\n                if (uImg.startsWith(DIS)) {\r\n                    uImg = uImg.replace(DIS, '');\r\n                    return this.unitDisableIcon(classTag, u, uImg); \r\n                } else {\r\n                    return this.unitRegularIcon(classTag, u, uImg); \r\n                }\r\n                \r\n            }) \r\n        }\r\n        \r\n    }\r\n\r\n    /* generates regular unit icon path */\r\n    unitRegularIcon(classTag, u, uImg) {\r\n        \r\n        let img = <>\r\n            <Tooltip \r\n                overlayClassName=\"u-tooltip\" \r\n                align={{\r\n                offset: [\"0 px\", \"-15 px\"],\r\n            }}  \r\n                mouseLeaveDelay=\"0.0\" \r\n                destroyTooltipOnHide={true} \r\n                placement=\"top\" \r\n                overlay={this.tooltipContent()}>\r\n\r\n                <img \r\n                    className={classTag} \r\n                    name={u} \r\n                    src={require(\"../Units/\" + uImg + \".png\")} \r\n                    onMouseEnter={this.handleUnitHover}>\r\n                </img>\r\n\r\n            </Tooltip>\r\n\r\n        </>;\r\n        return (img);\r\n    }\r\n\r\n     /* generates DISABLED red cross + regular unit icon path */\r\n    unitDisableIcon(classTag, u, uImg) {\r\n        let img = <>\r\n            <img className=\"x-overlay\" src={require(\"../Units/x.png\")} onMouseEnter={this.handleUnitHover}></img>\r\n            <Tooltip overlayClassName=\"u-tooltip\" align={{\r\n                offset: [\"0 px\", \"-15 px\"],\r\n            }} mouseLeaveDelay=\"0.0\" destroyTooltipOnHide={true} placement=\"top\" overlay={this.tooltipContent()}>\r\n                <img className={classTag} name={u} src={require(\"../Units/\" + uImg + \".png\")} onMouseEnter={this.handleUnitHover}>\r\n\r\n                </img>\r\n\r\n            </Tooltip>\r\n\r\n        </>;\r\n        return (img);\r\n    }\r\n\r\n    tooltipContent() {\r\n        try {\r\n            let content = <div></div>;\r\n            if (this.state.unitType === UNITS) {\r\n                content = <>    <h6>{this.state.unit}</h6>\r\n                                {\"HP: \" + this.state.unitStats.HP + \"    \"}<br></br>\r\n                                {\"Attack: \" + this.state.unitStats.Attack}<br></br>\r\n                                {\"Armor: \" + this.state.unitStats.Armor}<br></br>\r\n                                {\"Range: \" + this.state.unitStats.Range}<br></br>\r\n                                {\"Cost: \" + JSON.stringify(this.state.unitStats.Cost)}<br></br>\r\n                                <p>{this.state.unitInfo}</p>\r\n                            </>\r\n            } else if (this.state.unitType === TECHS) {\r\n                content = <>    <h6>{this.state.unit}</h6>\r\n                                {\"Cost: \" + JSON.stringify(this.state.unitStats.Cost)}<br></br>\r\n                                <p>{this.state.unitInfo}</p>\r\n                            </>\r\n            }\r\n            return (content)\r\n        } catch (e) {\r\n            console.log(\"tooltipContent!\");\r\n        }\r\n        \r\n    }\r\n\r\n    /* determine & return className of img icon based on regular, fully upgraded, or NA */\r\n    determineUnitClassName(fu, u) {\r\n        let classTag;\r\n        if (fu !== undefined && this.props.fu.includes(u)) {\r\n            classTag = \"unit unit-fu\"; \r\n        } else if (u !== NA) {\r\n            classTag = \"unit\"; \r\n        } else {\r\n            classTag = \"unit unit-na\";\r\n        }\r\n        return classTag;\r\n    }\r\n\r\n    handleUnitHover(event) {\r\n        let obj = {name: event.target.name, x: event.clientX, y: event.clientY}\r\n        let name = event.target.name;\r\n        let unit_id = undefined;\r\n        let type = UNITS;\r\n        if (name !== undefined && name !== NA) {\r\n            unit_id = DATA.name_key.units[name];\r\n            type = UNITS;\r\n         \r\n            if (unit_id === undefined) {\r\n                if (name === \"Unique Tech 1\") {\r\n                    name = this.props.UT[0];\r\n                } else if (name === \"Unique Tech 2\") {\r\n                    name = this.props.UT[1];\r\n                } else if(name === \"Spies or Treason\") {\r\n                    name = \"Spies/Treason\";\r\n                } else {\r\n                    \r\n                }\r\n                type = TECHS;\r\n                unit_id = DATA.name_key.techs[name];\r\n  \r\n            }\r\n\r\n             \r\n            let unit_info = DATA.key_value[unit_id];\r\n            let unit_stats = this.extractStats(name, type);\r\n            this.setState({unit : name, unitType: type, unitInfo : unit_info, unitStats : unit_stats});\r\n\r\n        } else {\r\n            console.log(\"NA Hovered!\");\r\n            type = NA;\r\n            this.setState({unit : null, unitType: null, unitInfo : null, unitStats : null});\r\n        }\r\n        \r\n        untiService.unitHovered(obj);\r\n    }\r\n\r\n    extractStats(name, type) {\r\n        try {\r\n            if (type === UNITS) {\r\n                var unit_name = DATA.meta.units[name];\r\n                var unit_stats = {\r\n                    HP: unit_name.HP,\r\n                    Attack: unit_name.Attack,\r\n                    Armor: unit_name.MeleeArmor + \"/\" + unit_name.PierceArmor,\r\n                    Range: unit_name.Range,\r\n                    Cost: unit_name.Cost\r\n                    \r\n                }\r\n            } else if (type === TECHS) {\r\n                if (name === \"Unique Tech 1\") {\r\n                    unit_name = DATA.meta.techs[(this.props.UT[0])];\r\n                } else if (name === \"Unique Tech 2\") {\r\n                    unit_name = DATA.meta.techs[(this.props.UT[1])];\r\n                } else if (name === \"Spies or Treason\") {\r\n                    unit_name = DATA.meta.techs[(\"Spies/Treason\")];\r\n                } else {\r\n                    unit_name = DATA.meta.techs[name];               \r\n                }\r\n                unit_stats = {\r\n                    Cost: unit_name.Cost\r\n                }\r\n            } else {\r\n                unit_stats = null;\r\n                console.log(\"Neither tech or unit stats\");\r\n            }\r\n            console.log(unit_stats);\r\n            return unit_stats;\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n         \r\n            <div className=\"tree\">\r\n            <div ><img src={require(\"../Techs/dark_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(0)}\r\n                \r\n            </div>\r\n            <div><img src={require(\"../Techs/feudal_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(1)}\r\n\r\n            </div>\r\n            <div><img src={require(\"../Techs/castle_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(2)}\r\n\r\n            </div>\r\n            <div><img src={require(\"../Techs/imperial_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(3)}\r\n            </div>\r\n            <div><img src={require(\"../Techs/imperial_age.png\")} className=\"age age-empty\"></img>\r\n                {this.generateUnit(4)}\r\n\r\n            </div>\r\n            {/* <ReactTooltip className=\"tooltip\" place=\"top\" type=\"dark\" effect=\"float\">\r\n            </ReactTooltip> */}\r\n            \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Tree;"]},"metadata":{},"sourceType":"module"}