{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\zone\\\\zone\\\\src\\\\techtree\\\\panels\\\\treeParent.js\";\nimport React, { Component } from \"react\";\nimport TreePanel from \"./treePanel\";\nimport { TOWNCENTRE, RANGE, BARRACKS, STABLE, SIEGE, CASTLE, BLACSKMITH, MONASTERY, UNIVERSITY, ECONOMY, DOCK, DEFENSE } from \"./UNIT_NAMES\";\nimport CivContext from \"../CivContext\";\nimport NotifService, { CIV_SELECTED } from \"./notifService\";\nimport CivService from \"./civService\";\nvar notifService = new NotifService();\nvar civService = new CivService();\nconst NA = \"NA\";\nvar num = 1;\nexport default class TreeParent extends Component {\n  // xRange = Array.from(RANGE);\n  constructor(props) {\n    num = 1;\n    super(props);\n    this.xRange = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\n    this.state = {\n      civ: \"Aztecs\"\n    };\n    this.updateTree = this.updateTree.bind(this);\n    console.log(\"State!\");\n  }\n\n  componentDidMount() {\n    notifService.addObserver(CIV_SELECTED, this, this.civChanged);\n  }\n\n  componentWillUnmount() {\n    notifService.removeObserver(this, CIV_SELECTED);\n  }\n\n  civChanged(value) {\n    this.updateTree(value);\n  }\n  /* value = civ selected */\n\n\n  updateTree(value) {\n    console.log(value); // this.xRange = Array.from(RANGE);\n\n    this.xRange = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\n\n    switch (value) {\n      case \"Berbers\":\n        this.disable(this.xRange, [\"Cavalry Archer\", \"Hand Cannoneer\", \"Thumb Ring\", \"Parthian Tactics\", \"Heavy Cavalry Archer\"]);\n        break;\n\n      case \"Turks\":\n        this.disable(this.xRange, [\"Arbalester\", \"Elite Skirmisher\"]);\n        break;\n    }\n  }\n\n  disable(build, units) {\n    let newTree = Array.from(build);\n    let disableLength = units.length;\n\n    for (let i = 0; disableLength > 0 && i <= 4; i++) {\n      newTree[i].forEach(unit => {\n        units.forEach(x => {\n          if (unit === x) {\n            let k = newTree[i].indexOf(unit);\n            newTree[i][k] = NA;\n            disableLength--;\n          }\n        });\n      });\n    }\n\n    console.log(newTree);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" HEADING \"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TreePanel, {\n      build: \"Archery Range\",\n      tree: this.xRange,\n      key: RANGE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["D:/Coding/GitHub/zone/zone/src/techtree/panels/treeParent.js"],"names":["React","Component","TreePanel","TOWNCENTRE","RANGE","BARRACKS","STABLE","SIEGE","CASTLE","BLACSKMITH","MONASTERY","UNIVERSITY","ECONOMY","DOCK","DEFENSE","CivContext","NotifService","CIV_SELECTED","CivService","notifService","civService","NA","num","TreeParent","constructor","props","xRange","state","civ","updateTree","bind","console","log","componentDidMount","addObserver","civChanged","componentWillUnmount","removeObserver","value","disable","build","units","newTree","Array","from","disableLength","length","i","forEach","unit","x","k","indexOf","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport TreePanel from \"./treePanel\";\r\nimport {TOWNCENTRE, RANGE, BARRACKS, STABLE, SIEGE, CASTLE, BLACSKMITH, MONASTERY, UNIVERSITY, ECONOMY, DOCK, DEFENSE} from \"./UNIT_NAMES\";\r\nimport CivContext from \"../CivContext\";\r\nimport NotifService, {CIV_SELECTED} from \"./notifService\";\r\nimport CivService from \"./civService\";\r\n\r\n\r\nvar notifService = new NotifService();\r\nvar civService = new CivService();\r\nconst NA = \"NA\";\r\n\r\nvar num = 1;\r\n\r\nexport default class TreeParent extends Component {\r\n    // xRange = Array.from(RANGE);\r\n    xRange = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\r\n    \r\n    \r\n    constructor(props) {\r\n        num = 1;\r\n        super(props);\r\n        this.state = {civ: \"Aztecs\"};\r\n        this.updateTree = this.updateTree.bind(this);\r\n        console.log(\"State!\");\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        notifService.addObserver(CIV_SELECTED, this, this.civChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        notifService.removeObserver(this, CIV_SELECTED);\r\n    }\r\n\r\n    civChanged(value) {\r\n        this.updateTree(value);\r\n    }\r\n\r\n    /* value = civ selected */\r\n    updateTree(value) {\r\n\r\n        console.log(value)\r\n        // this.xRange = Array.from(RANGE);\r\n        this.xRange = [[NA], [\"Archer\", \"Skirmisher\"], [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", NA, NA, \"Thumb Ring\"], [\"Arbalester\", NA, \"Heavy Cavalry Archer\", \"Hand Cannoneer\", NA, \"Parthian Tactics\"], [NA]];\r\n\r\n\r\n        switch (value) {\r\n            case \"Berbers\":\r\n                this.disable(this.xRange, [\"Cavalry Archer\", \"Hand Cannoneer\", \"Thumb Ring\", \"Parthian Tactics\", \"Heavy Cavalry Archer\"]);\r\n                break;\r\n            case \"Turks\":\r\n                this.disable(this.xRange, [\"Arbalester\", \"Elite Skirmisher\"]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    disable(build, units) {\r\n        let newTree = Array.from(build);\r\n        let disableLength = units.length;\r\n\r\n        for (let i=0; disableLength>0 && i<=4; i++) {\r\n            newTree[i].forEach(unit => {\r\n                units.forEach(x => {\r\n                    if (unit === x) {\r\n                        let k = newTree[i].indexOf(unit);\r\n                        newTree[i][k] = NA;\r\n                        disableLength--;\r\n                    } \r\n                });\r\n            });\r\n        }        \r\n\r\n        console.log(newTree);\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <>\r\n            {/* <CivContext.Consumer> \r\n                {value => this.updateTree(value)}\r\n            </CivContext.Consumer>  */}\r\n            <div>\r\n                <h5> HEADING </h5>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                        <TreePanel build=\"Archery Range\" tree={this.xRange} key={RANGE}/></tr>\r\n                        {/* <TreePanel build=\"Barracks\" tree={barracks}/>\r\n                        <TreePanel build=\"Stable\" tree={stable}/>\r\n                        \r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Siege Workshop\" tree={siege}/>\r\n                        <TreePanel build=\"Castle\" tree={castle}/>\r\n                        <TreePanel build=\"Defense\" tree={defense}/>\r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Blacksmith\" tree={blacksmith}/>\r\n                        <TreePanel build=\"University\" tree={university}/>\r\n                        <TreePanel build=\"Monastery\" tree={monastery}/>\r\n                        </tr>\r\n                        <tr>\r\n                        <TreePanel build=\"Town Center\" tree={townCentre}/>\r\n                        <TreePanel build=\"Economic Buildings\" tree={economy}/>\r\n                        <TreePanel build=\"Dock\" tree={dock}/>\r\n                        </tr> */}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n                    \r\n            \r\n        )\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}