{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\GitHub\\\\zone\\\\zone\\\\src\\\\techtree\\\\panels\\\\tree.js\";\nimport React, { Component } from \"react\";\nimport UnitService from \"../Service/unitService\";\nimport NotifService, { UNIT_HOVERED } from \"../Service/notifService\";\nimport ReactTooltip from 'react-tooltip';\nimport DATA from \"../data\";\nconst NA = \"NA\";\nvar notifService = new NotifService();\nvar untiService = new UnitService();\nlet dark = [\"NA\"];\nlet feudal = [\"Archer\", \"Skirmisher\"];\nlet castle = [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", \"NA\", \"NA\", \"Thumb Ring\"];\nlet imperial = [\"Arbalester\", \"NA\", \"Heavy Cavalry Archer\", \"Hand Cannoneer\", \"NA\", \"Parthian Tactics\"];\nlet postImp = [\"NA\"];\nlet x = [];\nx.push(dark, feudal, castle, imperial, postImp);\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unit: \"XXs\"\n    };\n    this.defaultTree = this.defaultTree.bind(this);\n    this.generateUnit = this.generateUnit.bind(this);\n  }\n\n  componentDidMount() {\n    notifService.addObserver(UNIT_HOVERED, this, this.reset);\n  }\n\n  componentWillUnmount() {\n    notifService.removeObserver(this, UNIT_HOVERED);\n  }\n\n  reset() {// this.setState({civ : \"Aztecs\"});\n  }\n\n  defaultTree() {\n    // let dark = [\"Archer\", \"Skirmisher\"];\n    // let feudal = [\"Archer\", \"Skirmisher\"];\n    // let castle = [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", \"NA\", \"NA\", \"Thumb Ring\"];\n    // let imperial = [\"Arbalester\", \"NA\", \"Heavy Cavalry Archer\", \"Hand Cannoneer\", \"NA\", \"Parthian Tactics\"];\n    // let postImp = [\"Archer\", \"Skirmisher\"];\n    // var archer = [2, \"Archer\", \"Crossbowman\"Heavy Cavalry Archer, \"Arbalester\"];\n    // var skirm = [2, \"Skirmisher\", \"Elite Skirmisher\"];\n    // var ca = [3, \"Cavalry Archer\", \"Heavy Cavalry Archer\"];\n    // var hc = [4, \"Hand Cannoneer\"];\n    // this.units.archer = archer;\n    // this.units.skirm = skirm;\n    // this.units.ca = ca;\n    // this.units.hc = hc;\n    // this.units.push(archer, skirm, ca, hc);\n    let x = [];\n    x.push(dark, feudal, castle, imperial, postImp);\n    this.setState({\n      units: x\n    });\n    console.log(this.state.units);\n  }\n\n  generateUnit(i) {\n    if (this.props.units !== undefined) {\n      return this.props.units[i].map(u => {\n        let uImg = u.toLowerCase().replace(' ', '_').replace(' ', '_');\n        let classTag = this.determineUnitClassName(this.props.fu, u);\n        let img = React.createElement(React.Fragment, null, React.createElement(\"img\", {\n          className: classTag,\n          name: u,\n          src: require(\"../Units/\" + uImg + \".png\"),\n          onMouseEnter: this.handleUnitHover,\n          \"data-tip\": u,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n        return img;\n      });\n    }\n  }\n  /* determine & return className of img icon based on regular, fully upgraded, or NA */\n\n\n  determineUnitClassName(fu, u) {\n    let classTag;\n\n    if (fu !== undefined && this.props.fu.includes(u)) {\n      classTag = \"unit unit-fu\";\n    } else if (u !== NA) {\n      classTag = \"unit\";\n    } else {\n      classTag = \"unit unit-na\";\n    }\n\n    return classTag;\n  }\n\n  handleUnitHover(event) {\n    let obj = {\n      name: event.target.name,\n      x: event.clientX,\n      y: event.clientY\n    };\n    let name = event.target.name;\n    let unit_id = DATA.name_key.units[name];\n    let unit_info = DATA.key_value[unit_id];\n    console.log(unit_info);\n    untiService.unitHovered(obj);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/dark_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), this.generateUnit(0)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/feudal_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), this.generateUnit(1)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/castle_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.generateUnit(2)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/imperial_age.png\"),\n      className: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), this.generateUnit(3)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../Techs/imperial_age.png\"),\n      className: \"age age-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), this.generateUnit(4)), React.createElement(ReactTooltip, {\n      place: \"top\",\n      type: \"dark\",\n      effect: \"float\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Tree;","map":{"version":3,"sources":["D:/Coding/GitHub/zone/zone/src/techtree/panels/tree.js"],"names":["React","Component","UnitService","NotifService","UNIT_HOVERED","ReactTooltip","DATA","NA","notifService","untiService","dark","feudal","castle","imperial","postImp","x","push","Tree","constructor","props","state","unit","defaultTree","bind","generateUnit","componentDidMount","addObserver","reset","componentWillUnmount","removeObserver","setState","units","console","log","i","undefined","map","u","uImg","toLowerCase","replace","classTag","determineUnitClassName","fu","img","require","handleUnitHover","includes","event","obj","name","target","clientX","y","clientY","unit_id","name_key","unit_info","key_value","unitHovered","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport UnitService from \"../Service/unitService\";\r\nimport NotifService, { UNIT_HOVERED } from \"../Service/notifService\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport DATA from \"../data\";\r\nconst NA = \"NA\";\r\n\r\nvar notifService = new NotifService();\r\nvar untiService = new UnitService();\r\n\r\nlet dark = [\"NA\"];\r\nlet feudal = [\"Archer\", \"Skirmisher\"];\r\nlet castle = [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", \"NA\", \"NA\", \"Thumb Ring\"];\r\nlet imperial = [\"Arbalester\", \"NA\", \"Heavy Cavalry Archer\", \"Hand Cannoneer\", \"NA\", \"Parthian Tactics\"];\r\nlet postImp = [\"NA\"];\r\nlet x = [];\r\nx.push(dark, feudal, castle, imperial, postImp);\r\n\r\nclass Tree extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {unit: \"XXs\"}\r\n        this.defaultTree = this.defaultTree.bind(this);\r\n        this.generateUnit = this.generateUnit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        notifService.addObserver(UNIT_HOVERED, this, this.reset)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        notifService.removeObserver(this, UNIT_HOVERED);\r\n    }\r\n\r\n    reset() {\r\n        // this.setState({civ : \"Aztecs\"});\r\n    }\r\n\r\n    defaultTree() {\r\n        // let dark = [\"Archer\", \"Skirmisher\"];\r\n        // let feudal = [\"Archer\", \"Skirmisher\"];\r\n        // let castle = [\"Crossbowman\", \"Elite Skirmisher\", \"Cavalry Archer\", \"NA\", \"NA\", \"Thumb Ring\"];\r\n        // let imperial = [\"Arbalester\", \"NA\", \"Heavy Cavalry Archer\", \"Hand Cannoneer\", \"NA\", \"Parthian Tactics\"];\r\n        // let postImp = [\"Archer\", \"Skirmisher\"];\r\n        // var archer = [2, \"Archer\", \"Crossbowman\"Heavy Cavalry Archer, \"Arbalester\"];\r\n        // var skirm = [2, \"Skirmisher\", \"Elite Skirmisher\"];\r\n        // var ca = [3, \"Cavalry Archer\", \"Heavy Cavalry Archer\"];\r\n        // var hc = [4, \"Hand Cannoneer\"];\r\n        \r\n        // this.units.archer = archer;\r\n        // this.units.skirm = skirm;\r\n        // this.units.ca = ca;\r\n        // this.units.hc = hc;\r\n\r\n        // this.units.push(archer, skirm, ca, hc);\r\n        let x = [];\r\n        x.push(dark, feudal, castle, imperial, postImp);\r\n        this.setState({units : x});\r\n        console.log(this.state.units);\r\n    }\r\n\r\n    generateUnit(i) {\r\n        if (this.props.units !== undefined) {\r\n            return this.props.units[i].map(u => {\r\n                let uImg = u.toLowerCase().replace(' ', '_').replace(' ', '_');\r\n                let classTag = this.determineUnitClassName(this.props.fu, u);\r\n                    let img = <><img \r\n                                className={classTag} name={u}\r\n                                src={require(\"../Units/\" + uImg + \".png\")}\r\n                                onMouseEnter={this.handleUnitHover}\r\n                                data-tip={u}>\r\n\r\n                            </img>\r\n                            \r\n                            </>\r\n                return (img); \r\n            }) \r\n        }\r\n        \r\n    }\r\n\r\n    /* determine & return className of img icon based on regular, fully upgraded, or NA */\r\n    determineUnitClassName(fu, u) {\r\n        let classTag;\r\n        if (fu !== undefined && this.props.fu.includes(u)) {\r\n            classTag = \"unit unit-fu\"; \r\n        } else if (u !== NA) {\r\n            classTag = \"unit\"; \r\n        } else {\r\n            classTag = \"unit unit-na\";\r\n        }\r\n        return classTag;\r\n    }\r\n\r\n    handleUnitHover(event) {\r\n        let obj = {name: event.target.name, x: event.clientX, y: event.clientY}\r\n        let name = event.target.name;\r\n        let unit_id = DATA.name_key.units[name];\r\n        let unit_info = DATA.key_value[unit_id];\r\n        console.log(unit_info);\r\n        untiService.unitHovered(obj);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n         \r\n            <div className=\"tree\">\r\n            <div><img src={require(\"../Techs/dark_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(0)}\r\n                \r\n            </div>\r\n            <div><img src={require(\"../Techs/feudal_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(1)}\r\n\r\n            </div>\r\n            <div><img src={require(\"../Techs/castle_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(2)}\r\n\r\n            </div>\r\n            <div><img src={require(\"../Techs/imperial_age.png\")} className=\"age\"></img>\r\n                {this.generateUnit(3)}\r\n            </div>\r\n            <div><img src={require(\"../Techs/imperial_age.png\")} className=\"age age-empty\"></img>\r\n                {this.generateUnit(4)}\r\n\r\n            </div>\r\n            <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\"/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Tree;"]},"metadata":{},"sourceType":"module"}